#ifndef BOT_LCU_H_INCLUDED
#define BOT_LCU_H_INCLUDED

#include "main.h"
#include "bot_utils.h"
#include "bot_callback.h"
#include "bot_database.h"

typedef enum bot_LCU_POPUP_MENU_Enum
{
    bot_LCU_M_ADD = 0,
    bot_LCU_M_CONTROL,
    bot_LCU_M_REMOVE,
    bot_LCU_M_REMOVE_ALL,

    bot_LCU_M_NUMBER
} bot_LCU_POPUP_MENU_Enum;

typedef struct bot_LCU_POPUP_MENU
{
    GtkWidget *M_Popup;
    GtkWidget *M_Add;
    GtkWidget *M_Control;
    GtkWidget *M_Remove;
    GtkWidget *M_Remove_all;
}bot_LCU_POPUP_MENU;


enum
{
    LCU_SCHEDULE_MONTH_COLUMN = 0,
    LCU_SCHEDULE_STARTTIME_COLUMN,
    LCU_SCHEDULE_TIMEON_COLUMN,
    LCU_SCHEDULE_LEVEL_COLUMN,
    LCU_SCHEDULE_PROGRAM_NAME_COLUMN,
    LCU_SCHEDULE_NUM_COLUMNS
};


enum
{
    LCU_CHECKBOX_COLUMN = 0,
    LCU_ID_COLUMN,
    LCU_GPS_COLUMN,
    LCU_NOTE_COLUMN,
    LCU_MODE_COLUMN,
    LCU_ISON_COLUMN,
    LCU_STATUS_COLUMN,
    LCU_CURRENT_COLUMN,
    LCU_LIGHTLEVEL_COLUMN,
    LCU_ISBROKEN_COLUMN,
    LCU_DCUID_COLUMN,
    LCU_UPDATETIME_COLUMN,
    LCU_NUM_COLUMNS
};

enum
{
    LIGHT_ID = 0,
    LIGHT_GPS,
    LIGHT_STATUS,
    LIGHT_ZONE_CODE,
    LIGHT_ZONE_NAME,
    LIGHT_MODE,
    LIGHT_AMPE,
    LIGHT_BRIGHTNESS,
    LIGHT_NOTE,
    LIGHT_ISON,
    LIGHT_DCU,
    LIGHT_IMG,
    LIGHT_COUNT,
};

enum bot_LCU_MODE_Enum
{
    bot_LCU_ScheduleMode = 0,
    bot_LCU_ManualMode
};

enum bot_LCU_STATUS_Enum
{
    bot_LCU_Active = 0,
    bot_LCU_Unactive
};

extern GtkTreeView *lcu_info_tree_view;
extern GtkListStore *lcu_info_list_store;
extern GtkListStore *lcu_info_list_dcu_combobox;

extern struct bot_LCU_POPUP_MENU *lcu_info_popup_menu;


typedef struct bot_LCU_Widgets
{
    GtkAdjustment	    *lcu_adjustment_light_level;
	GtkWidget	        *lcu_scale_light_level;
	GtkTreeView         *lcu_control_treeview_schedule;
	GtkListStore        *lcu_control_liststore_schedule;

} bot_LCU_Widgets;

extern struct bot_LCU_Widgets *lcu_widgets;

void bot_lcu_fill_infomation(gchar *lcu_name,
                                           gchar *lcu_gps,
                                           gchar *lcu_note,
                                           gchar *lcu_mode,
                                           gboolean lcu_ison,
                                           gboolean lcu_status,
                                           gchar *lcu_current,
                                           gchar *lcu_lightlevel,
                                           gboolean lcu_isbroken,
                                           gchar *lcu_dcuid,
                                           gchar *lcu_updatetime
                                           );

void bot_lcu_show_list(gchar *dcu_id);

void bot_lcu_liststore_clean();

void bot_lcu_dialog_show(GtkTreeModel *model, GtkTreeIter iter);

gboolean bot_lcu_info_init(void);

void bot_lcu_finalize(void);

void bot_lcu_popup_menu_show(GtkTreeView *treeview, GdkEventButton *event, gpointer userdata);

gchar * bot_lcu_get_status_name(bot_LCU_STATUS_Enum index);

gchar * bot_lcu_get_mode_name(bot_LCU_MODE_Enum index);

void bot_lcu_control_mode_combobox_change(void);

void bot_lcu_control_schedule_fill(gchar *schedule_month,
                                                gchar *schedule_starttime,
                                                gchar *schedule_timeon,
                                                gchar *schedule_level,
                                                gchar *schedule_program_name);

void bot_get_all_light();
void light_update_information_from_model_iter(GtkTreeModel *model, GtkTreeIter *iter);
void popup_light_view_show(GdkEventButton *event);
#endif // BOT_LCU_H_INCLUDED

