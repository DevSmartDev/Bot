/* soapStub.h
   Generated by gSOAP 2.8.7 from ../../../src/gsoap/smartstreetlightService.h

Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#define SOAP_NAMESPACE_OF_ns1	"urn:wsdl.icdrec.edu.vn"
#include "stdsoap2.h"
#if GSOAP_H_VERSION != 20807
# error "GSOAP VERSION MISMATCH IN GENERATED CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE_ns1__MESSAGE_USCORERESULT_USCOREEnum
#define SOAP_TYPE_ns1__MESSAGE_USCORERESULT_USCOREEnum (124)
/* ns1:MESSAGE_RESULT_Enum */
enum ns1__MESSAGE_USCORERESULT_USCOREEnum {ns1__MESSAGE_USCORERESULT_USCOREEnum__NON_USCOREERR = 0, ns1__MESSAGE_USCORERESULT_USCOREEnum__MYSQL_USCOREERR = 1, ns1__MESSAGE_USCORERESULT_USCOREEnum__USER_USCOREPASS_USCOREERR = 2, ns1__MESSAGE_USCORERESULT_USCOREEnum__INVALID_USCORELOGIN_USCOREERR = 3, ns1__MESSAGE_USCORERESULT_USCOREEnum__INTERNAL_USCOREERR = 4, ns1__MESSAGE_USCORERESULT_USCOREEnum__UNKNOW_USCOREERR = 5, ns1__MESSAGE_USCORERESULT_USCOREEnum__TIMEOUT_USCOREERR = 6, ns1__MESSAGE_USCORERESULT_USCOREEnum__OFFLINE_USCOREERR = 7, ns1__MESSAGE_USCORERESULT_USCOREEnum__MODE_USCOREERR = 8, ns1__MESSAGE_USCORERESULT_USCOREEnum__LIGHTNUM_USCOREERR = 9, ns1__MESSAGE_USCORERESULT_USCOREEnum__LINENUM_USCOREERR = 10, ns1__MESSAGE_USCORERESULT_USCOREEnum__CLOCK_USCOREERR = 11, ns1__MESSAGE_USCORERESULT_USCOREEnum__EXIST_USCOREDCU_USCOREERR = 12, ns1__MESSAGE_USCORERESULT_USCOREEnum__NOEXIST_USCOREDCU_USCOREERR = 13, ns1__MESSAGE_USCORERESULT_USCOREEnum__EXIST_USCORELCU_USCOREERR = 14, ns1__MESSAGE_USCORERESULT_USCOREEnum__NOEXIST_USCORELCU_USCOREERR = 15, ns1__MESSAGE_USCORERESULT_USCOREEnum__MEM_USCOREERR = 16, ns1__MESSAGE_USCORERESULT_USCOREEnum__GET_USCOREPRO_USCOREFROM_USCOREDB_USCOREERR = 17, ns1__MESSAGE_USCORERESULT_USCOREEnum__USER_USCOREPASSWD_USCOREERR = 18, ns1__MESSAGE_USCORERESULT_USCOREEnum__ADD_USCORELCU_USCOREERR = 19, ns1__MESSAGE_USCORERESULT_USCOREEnum__REMOVE_USCORELCU_USCOREERR = 20, ns1__MESSAGE_USCORERESULT_USCOREEnum__LIMIT_USCORELCU_USCOREERR = 21, ns1__MESSAGE_USCORERESULT_USCOREEnum__SET_USCORESCHEDULE_USCORELCU_USCOREERR = 22, ns1__MESSAGE_USCORERESULT_USCOREEnum__GET_USCORESCHEDULE_USCORELCU_USCOREERR = 23, ns1__MESSAGE_USCORERESULT_USCOREEnum__VERIFY_USCORESCHEDULE_USCORELCU_USCOREERR = 24, ns1__MESSAGE_USCORERESULT_USCOREEnum__GET_USCORELCU_USCOREERR = 25, ns1__MESSAGE_USCORERESULT_USCOREEnum__ADD_USCORELINE_USCOREERR = 26, ns1__MESSAGE_USCORERESULT_USCOREEnum__REMOVE_USCORELINE_USCOREERR = 27, ns1__MESSAGE_USCORERESULT_USCOREEnum__LIMIT_USCORELINE_USCOREERR = 28, ns1__MESSAGE_USCORERESULT_USCOREEnum__SET_USCORESCHEDULE_USCORELINE_USCOREERR = 29, ns1__MESSAGE_USCORERESULT_USCOREEnum__GET_USCORESCHEDULE_USCORELINE_USCOREERR = 30, ns1__MESSAGE_USCORERESULT_USCOREEnum__VERIFY_USCORESCHEDULE_USCORELINE_USCOREERR = 31, ns1__MESSAGE_USCORERESULT_USCOREEnum__GET_USCORELINE_USCOREERR = 32, ns1__MESSAGE_USCORERESULT_USCOREEnum__EXIST_USCOREPROGRAM_USCOREERR = 33, ns1__MESSAGE_USCORERESULT_USCOREEnum__NOEXIST_USCOREPROGRAM_USCOREERR = 34, ns1__MESSAGE_USCORERESULT_USCOREEnum__ISUSE_USCOREPROGRAM_USCOREERR = 35, ns1__MESSAGE_USCORERESULT_USCOREEnum__MANAGE_USCOREDCU_USCOREPRIVILEGE_USCOREERR = 36, ns1__MESSAGE_USCORERESULT_USCOREEnum__MANAGE_USCORELINE_USCORELCU_USCOREPRIVILEGE_USCOREERR = 37, ns1__MESSAGE_USCORERESULT_USCOREEnum__CONTROL_USCORELINE_USCORELCU_USCOREPRIVILEGE_USCOREERR = 38, ns1__MESSAGE_USCORERESULT_USCOREEnum__SETUP_USCOREDEVICE_USCOREPRIVILEGE_USCOREERR = 39, ns1__MESSAGE_USCORERESULT_USCOREEnum__PROGRAM_USCOREPRIVILEGE_USCOREERR = 40, ns1__MESSAGE_USCORERESULT_USCOREEnum__ADMINISTRATOR_USCOREPRIVILEGE_USCOREERR = 41, ns1__MESSAGE_USCORERESULT_USCOREEnum__EXIST_USCOREUSER_USCOREERR = 42, ns1__MESSAGE_USCORERESULT_USCOREEnum__NOEXIST_USCOREUSER_USCOREERR = 43, ns1__MESSAGE_USCORERESULT_USCOREEnum__INVALID_USCOREMONTH_USCOREDAYSCHEDULE_USCOREERR = 44, ns1__MESSAGE_USCORERESULT_USCOREEnum__EXIST_USCOREDAYSCHEDULE_USCOREERR = 45, ns1__MESSAGE_USCORERESULT_USCOREEnum__NOEXIST_USCOREDAYSCHEDULE_USCOREERR = 46, ns1__MESSAGE_USCORERESULT_USCOREEnum__EXIST_USCORESCHEDULE_USCOREERR = 47, ns1__MESSAGE_USCORERESULT_USCOREEnum__NOEXIST_USCORESCHEDULE_USCOREERR = 48, ns1__MESSAGE_USCORERESULT_USCOREEnum__CONTROL_USCORELCU_USCOREERR = 49, ns1__MESSAGE_USCORERESULT_USCOREEnum__OTHER_USCOREUSER_USCORECONTROL_USCORETEMP_USCORELCU_USCOREERR = 50, ns1__MESSAGE_USCORERESULT_USCOREEnum__LOGIN_USCOREWITH_USCOREOTHER_USCOREDEV_USCOREERR = 51, ns1__MESSAGE_USCORERESULT_USCOREEnum__DCU_USCOREBUSY_USCOREERR = 52};
#endif

#ifndef SOAP_TYPE_ns1__EVENTLOG_USCORETYPE_USCOREEnum
#define SOAP_TYPE_ns1__EVENTLOG_USCORETYPE_USCOREEnum (125)
/* ns1:EVENTLOG_TYPE_Enum */
enum ns1__EVENTLOG_USCORETYPE_USCOREEnum {ns1__EVENTLOG_USCORETYPE_USCOREEnum__CONNECT_USCOREDCU_USCORELOG = 0, ns1__EVENTLOG_USCORETYPE_USCOREEnum__LIFECYCLE_USCORESERVER_USCORELOG = 1, ns1__EVENTLOG_USCORETYPE_USCOREEnum__DCU_USCOREERR_USCORELOG = 2, ns1__EVENTLOG_USCORETYPE_USCOREEnum__LCU_USCOREERR_USCORELOG = 3, ns1__EVENTLOG_USCORETYPE_USCOREEnum__LINE_USCOREERR_USCORELOG = 4};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType
#define SOAP_TYPE_ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType (7)
/* ns1:CURR_LOGIN_INFO_Type */
class SOAP_CMAC ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType
{
public:
	char *curr_USCOREusername;	/* required element of type xsd:string */
	int curr_USCOREsession_USCOREid;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 7; } /* = unique id SOAP_TYPE_ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType() { ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType::soap_default(NULL); }
	virtual ~ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__DCU_USCOREINFO_USCOREType
#define SOAP_TYPE_ns1__DCU_USCOREINFO_USCOREType (8)
/* ns1:DCU_INFO_Type */
class SOAP_CMAC ns1__DCU_USCOREINFO_USCOREType
{
public:
	char *dcu_USCOREid;	/* required element of type xsd:string */
	char *dcu_USCOREphone;	/* required element of type xsd:string */
	char *dcu_USCOREgps;	/* required element of type xsd:string */
	char *dcu_USCOREaddress;	/* required element of type xsd:string */
	char *dcu_USCOREnote;	/* required element of type xsd:string */
	int dcu_USCOREmode;	/* required element of type xsd:int */
	int dcu_USCOREstatus;	/* required element of type xsd:int */
	int dcu_USCOREprogram_USCOREid;	/* required element of type xsd:int */
	int dcu_USCOREzoneid;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 8; } /* = unique id SOAP_TYPE_ns1__DCU_USCOREINFO_USCOREType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__DCU_USCOREINFO_USCOREType() { ns1__DCU_USCOREINFO_USCOREType::soap_default(NULL); }
	virtual ~ns1__DCU_USCOREINFO_USCOREType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__LCU_USCOREINFO_USCOREType
#define SOAP_TYPE_ns1__LCU_USCOREINFO_USCOREType (9)
/* ns1:LCU_INFO_Type */
class SOAP_CMAC ns1__LCU_USCOREINFO_USCOREType
{
public:
	char *lcu_USCOREid;	/* required element of type xsd:string */
	char *lcu_USCOREgps;	/* required element of type xsd:string */
	char *lcu_USCOREnote;	/* required element of type xsd:string */
	int lcu_USCOREmode;	/* required element of type xsd:int */
	int lcu_USCOREison;	/* required element of type xsd:int */
	int lcu_USCOREstatus;	/* required element of type xsd:int */
	int lcu_USCOREcurrent;	/* required element of type xsd:int */
	int lcu_USCORElevel;	/* required element of type xsd:int */
	int lcu_USCOREistemp;	/* required element of type xsd:int */
	char *lcu_USCOREdcuid;	/* required element of type xsd:string */
	int lcu_USCOREpower;	/* required element of type xsd:int */
	char *lcu_USCORElightname;	/* required element of type xsd:string */
	int lcu_USCOREtolerance;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 9; } /* = unique id SOAP_TYPE_ns1__LCU_USCOREINFO_USCOREType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__LCU_USCOREINFO_USCOREType() { ns1__LCU_USCOREINFO_USCOREType::soap_default(NULL); }
	virtual ~ns1__LCU_USCOREINFO_USCOREType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__LCULOGINFOType
#define SOAP_TYPE_ns1__LCULOGINFOType (10)
/* ns1:LCULOGINFOType */
class SOAP_CMAC ns1__LCULOGINFOType
{
public:
	int lcuLogId;	/* required element of type xsd:int */
	char *lcuLogLcuId;	/* required element of type xsd:string */
	int lcuLogPowerConsum;	/* required element of type xsd:int */
	int lcuLogPowerCtrl;	/* required element of type xsd:int */
	int lcuLogPower;	/* required element of type xsd:int */
	int lcuLogTolerance;	/* required element of type xsd:int */
	char *lcuLogDate;	/* required element of type xsd:string */
	char *lcuLogLightName;	/* required element of type xsd:string */
	int lcuLogStatus;	/* required element of type xsd:int */
	int lcuLogMode;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 10; } /* = unique id SOAP_TYPE_ns1__LCULOGINFOType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__LCULOGINFOType() { ns1__LCULOGINFOType::soap_default(NULL); }
	virtual ~ns1__LCULOGINFOType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__LINE_USCOREINFO_USCOREType
#define SOAP_TYPE_ns1__LINE_USCOREINFO_USCOREType (11)
/* ns1:LINE_INFO_Type */
class SOAP_CMAC ns1__LINE_USCOREINFO_USCOREType
{
public:
	int line_USCOREid;	/* required element of type xsd:int */
	char *line_USCOREdcuid;	/* required element of type xsd:string */
	int line_USCOREstatus;	/* required element of type xsd:int */
	char *line_USCOREnote;	/* required element of type xsd:string */
	int line_USCOREmode;	/* required element of type xsd:int */
	int line_USCOREison;	/* required element of type xsd:int */
	int line_USCOREcurrent;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 11; } /* = unique id SOAP_TYPE_ns1__LINE_USCOREINFO_USCOREType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__LINE_USCOREINFO_USCOREType() { ns1__LINE_USCOREINFO_USCOREType::soap_default(NULL); }
	virtual ~ns1__LINE_USCOREINFO_USCOREType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__EVENT_USCORELOG_USCOREINFO_USCOREType
#define SOAP_TYPE_ns1__EVENT_USCORELOG_USCOREINFO_USCOREType (12)
/* ns1:EVENT_LOG_INFO_Type */
class SOAP_CMAC ns1__EVENT_USCORELOG_USCOREINFO_USCOREType
{
public:
	int eventlog_USCOREid;	/* required element of type xsd:int */
	char *eventlog_USCOREdcuid;	/* required element of type xsd:string */
	enum ns1__EVENTLOG_USCORETYPE_USCOREEnum eventlog_USCOREtype;	/* required element of type ns1:EVENTLOG_TYPE_Enum */
	char *eventlog_USCOREcontent;	/* required element of type xsd:string */
	char *eventlog_USCOREtime;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 12; } /* = unique id SOAP_TYPE_ns1__EVENT_USCORELOG_USCOREINFO_USCOREType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__EVENT_USCORELOG_USCOREINFO_USCOREType() { ns1__EVENT_USCORELOG_USCOREINFO_USCOREType::soap_default(NULL); }
	virtual ~ns1__EVENT_USCORELOG_USCOREINFO_USCOREType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__USER_USCORELOG_USCOREINFO_USCOREType
#define SOAP_TYPE_ns1__USER_USCORELOG_USCOREINFO_USCOREType (13)
/* ns1:USER_LOG_INFO_Type */
class SOAP_CMAC ns1__USER_USCORELOG_USCOREINFO_USCOREType
{
public:
	int userlog_USCOREid;	/* required element of type xsd:int */
	char *userlog_USCOREusername;	/* required element of type xsd:string */
	char *eventlog_USCOREcontent;	/* required element of type xsd:string */
	char *eventlog_USCOREtime;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 13; } /* = unique id SOAP_TYPE_ns1__USER_USCORELOG_USCOREINFO_USCOREType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__USER_USCORELOG_USCOREINFO_USCOREType() { ns1__USER_USCORELOG_USCOREINFO_USCOREType::soap_default(NULL); }
	virtual ~ns1__USER_USCORELOG_USCOREINFO_USCOREType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ZONE_USCOREINFO_USCOREType
#define SOAP_TYPE_ns1__ZONE_USCOREINFO_USCOREType (14)
/* ns1:ZONE_INFO_Type */
class SOAP_CMAC ns1__ZONE_USCOREINFO_USCOREType
{
public:
	int zone_USCOREid;	/* required element of type xsd:int */
	char *zone_USCOREnote;	/* required element of type xsd:string */
	char *zone_USCOREname;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 14; } /* = unique id SOAP_TYPE_ns1__ZONE_USCOREINFO_USCOREType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ZONE_USCOREINFO_USCOREType() { ns1__ZONE_USCOREINFO_USCOREType::soap_default(NULL); }
	virtual ~ns1__ZONE_USCOREINFO_USCOREType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__USER_USCOREINFO_USCOREType
#define SOAP_TYPE_ns1__USER_USCOREINFO_USCOREType (15)
/* ns1:USER_INFO_Type */
class SOAP_CMAC ns1__USER_USCOREINFO_USCOREType
{
public:
	int user_USCOREid;	/* required element of type xsd:int */
	char *user_USCOREaccount;	/* required element of type xsd:string */
	char *user_USCOREpass;	/* required element of type xsd:string */
	char *user_USCOREphone;	/* required element of type xsd:string */
	char *user_USCOREemail;	/* required element of type xsd:string */
	bool user_USCOREmanage_USCOREdcu_USCOREprivilege;	/* required element of type xsd:boolean */
	bool user_USCOREmanage_USCORElculine_USCOREprivilege;	/* required element of type xsd:boolean */
	bool user_USCOREcontrol_USCORElculine_USCOREprivilege;	/* required element of type xsd:boolean */
	bool user_USCOREsetup_USCOREdevice_USCOREprivilege;	/* required element of type xsd:boolean */
	bool user_USCOREprogram_USCOREprivilege;	/* required element of type xsd:boolean */
	bool user_USCOREnotify_USCOREmail_USCOREprivilege;	/* required element of type xsd:boolean */
	bool user_USCOREnotify_USCOREsms_USCOREprivilege;	/* required element of type xsd:boolean */
	bool user_USCOREnotify_USCOREmail_USCOREenable;	/* required element of type xsd:boolean */
	bool user_USCOREnotify_USCOREsms_USCOREenable;	/* required element of type xsd:boolean */
	int __sizezone_USCORElist;	/* sequence of elements <zone_list> */
	ns1__ZONE_USCOREINFO_USCOREType **zone_USCORElist;	/* optional element of type ns1:ZONE_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 15; } /* = unique id SOAP_TYPE_ns1__USER_USCOREINFO_USCOREType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__USER_USCOREINFO_USCOREType() { ns1__USER_USCOREINFO_USCOREType::soap_default(NULL); }
	virtual ~ns1__USER_USCOREINFO_USCOREType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PROGRAM_USCOREINFO_USCOREType
#define SOAP_TYPE_ns1__PROGRAM_USCOREINFO_USCOREType (16)
/* ns1:PROGRAM_INFO_Type */
class SOAP_CMAC ns1__PROGRAM_USCOREINFO_USCOREType
{
public:
	char *program_USCOREname;	/* required element of type xsd:string */
	int program_USCOREid;	/* required element of type xsd:int */
	int zone_USCOREid;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 16; } /* = unique id SOAP_TYPE_ns1__PROGRAM_USCOREINFO_USCOREType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PROGRAM_USCOREINFO_USCOREType() { ns1__PROGRAM_USCOREINFO_USCOREType::soap_default(NULL); }
	virtual ~ns1__PROGRAM_USCOREINFO_USCOREType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__DAYSCHEDULE_USCOREINFO_USCOREType
#define SOAP_TYPE_ns1__DAYSCHEDULE_USCOREINFO_USCOREType (17)
/* ns1:DAYSCHEDULE_INFO_Type */
class SOAP_CMAC ns1__DAYSCHEDULE_USCOREINFO_USCOREType
{
public:
	int dayschedule_USCOREid;	/* required element of type xsd:int */
	int dayschedule_USCORElistScheduel_USCOREid;	/* required element of type xsd:int */
	int dayschedule_USCOREprogram_USCOREid;	/* required element of type xsd:int */
	int dayschedule_USCOREmonth;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 17; } /* = unique id SOAP_TYPE_ns1__DAYSCHEDULE_USCOREINFO_USCOREType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__DAYSCHEDULE_USCOREINFO_USCOREType() { ns1__DAYSCHEDULE_USCOREINFO_USCOREType::soap_default(NULL); }
	virtual ~ns1__DAYSCHEDULE_USCOREINFO_USCOREType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__LISTSCHEDULE_USCOREINFO_USCOREType
#define SOAP_TYPE_ns1__LISTSCHEDULE_USCOREINFO_USCOREType (18)
/* ns1:LISTSCHEDULE_INFO_Type */
class SOAP_CMAC ns1__LISTSCHEDULE_USCOREINFO_USCOREType
{
public:
	char *listscheduleName;	/* required element of type xsd:string */
	int listscheduleId;	/* required element of type xsd:int */
	int listscheduleProgramId;	/* required element of type xsd:int */
	int __sizesheduleList;	/* sequence of elements <sheduleList> */
	class ns1__SCHEDULE_USCOREINFO_USCOREType **sheduleList;	/* optional element of type ns1:SCHEDULE_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 18; } /* = unique id SOAP_TYPE_ns1__LISTSCHEDULE_USCOREINFO_USCOREType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__LISTSCHEDULE_USCOREINFO_USCOREType() { ns1__LISTSCHEDULE_USCOREINFO_USCOREType::soap_default(NULL); }
	virtual ~ns1__LISTSCHEDULE_USCOREINFO_USCOREType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SCHEDULE_USCOREINFO_USCOREType
#define SOAP_TYPE_ns1__SCHEDULE_USCOREINFO_USCOREType (19)
/* ns1:SCHEDULE_INFO_Type */
class SOAP_CMAC ns1__SCHEDULE_USCOREINFO_USCOREType
{
public:
	int scheduleId;	/* required element of type xsd:int */
	int scheduleListscheduleId;	/* required element of type xsd:int */
	int scheduleStarttime;	/* required element of type xsd:int */
	int scheduleOntime;	/* required element of type xsd:int */
	int scheduleLevel;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 19; } /* = unique id SOAP_TYPE_ns1__SCHEDULE_USCOREINFO_USCOREType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SCHEDULE_USCOREINFO_USCOREType() { ns1__SCHEDULE_USCOREINFO_USCOREType::soap_default(NULL); }
	virtual ~ns1__SCHEDULE_USCOREINFO_USCOREType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__LoginOperation
#define SOAP_TYPE__ns1__LoginOperation (20)
/* ns1:LoginOperation */
class SOAP_CMAC _ns1__LoginOperation
{
public:
	char *login_USCOREusername;	/* required element of type xsd:string */
	char *login_USCOREpassword;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 20; } /* = unique id SOAP_TYPE__ns1__LoginOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__LoginOperation() { _ns1__LoginOperation::soap_default(NULL); }
	virtual ~_ns1__LoginOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__LoginOperationResponse
#define SOAP_TYPE__ns1__LoginOperationResponse (21)
/* ns1:LoginOperationResponse */
class SOAP_CMAC _ns1__LoginOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum login_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	int session_USCOREID;	/* required element of type xsd:int */
	char *phone;	/* required element of type xsd:string */
	char *email;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 21; } /* = unique id SOAP_TYPE__ns1__LoginOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__LoginOperationResponse() { _ns1__LoginOperationResponse::soap_default(NULL); }
	virtual ~_ns1__LoginOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__LoginPcOperation
#define SOAP_TYPE__ns1__LoginPcOperation (22)
/* ns1:LoginPcOperation */
class SOAP_CMAC _ns1__LoginPcOperation
{
public:
	char *login_USCOREusername;	/* required element of type xsd:string */
	char *login_USCOREpassword;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 22; } /* = unique id SOAP_TYPE__ns1__LoginPcOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__LoginPcOperation() { _ns1__LoginPcOperation::soap_default(NULL); }
	virtual ~_ns1__LoginPcOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__LoginPcOperationResponse
#define SOAP_TYPE__ns1__LoginPcOperationResponse (23)
/* ns1:LoginPcOperationResponse */
class SOAP_CMAC _ns1__LoginPcOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum login_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	int session_USCOREID;	/* required element of type xsd:int */
	bool admin_USCOREprivilege;	/* required element of type xsd:boolean */
	ns1__USER_USCOREINFO_USCOREType *user;	/* required element of type ns1:USER_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 23; } /* = unique id SOAP_TYPE__ns1__LoginPcOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__LoginPcOperationResponse() { _ns1__LoginPcOperationResponse::soap_default(NULL); }
	virtual ~_ns1__LoginPcOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__LogoutOperation
#define SOAP_TYPE__ns1__LogoutOperation (24)
/* ns1:LogoutOperation */
class SOAP_CMAC _ns1__LogoutOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 24; } /* = unique id SOAP_TYPE__ns1__LogoutOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__LogoutOperation() { _ns1__LogoutOperation::soap_default(NULL); }
	virtual ~_ns1__LogoutOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__LogoutOperationResponse
#define SOAP_TYPE__ns1__LogoutOperationResponse (25)
/* ns1:LogoutOperationResponse */
class SOAP_CMAC _ns1__LogoutOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 25; } /* = unique id SOAP_TYPE__ns1__LogoutOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__LogoutOperationResponse() { _ns1__LogoutOperationResponse::soap_default(NULL); }
	virtual ~_ns1__LogoutOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__getDcuListOperation
#define SOAP_TYPE__ns1__getDcuListOperation (26)
/* ns1:getDcuListOperation */
class SOAP_CMAC _ns1__getDcuListOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	int zone_USCOREid;	/* required element of type xsd:int */
	int program_USCOREid;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 26; } /* = unique id SOAP_TYPE__ns1__getDcuListOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__getDcuListOperation() { _ns1__getDcuListOperation::soap_default(NULL); }
	virtual ~_ns1__getDcuListOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__getDcuListOperationResponse
#define SOAP_TYPE__ns1__getDcuListOperationResponse (27)
/* ns1:getDcuListOperationResponse */
class SOAP_CMAC _ns1__getDcuListOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	int __sizedcu_USCORElist;	/* sequence of elements <dcu_list> */
	ns1__DCU_USCOREINFO_USCOREType **dcu_USCORElist;	/* optional element of type ns1:DCU_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 27; } /* = unique id SOAP_TYPE__ns1__getDcuListOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__getDcuListOperationResponse() { _ns1__getDcuListOperationResponse::soap_default(NULL); }
	virtual ~_ns1__getDcuListOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__getLcuListOperation
#define SOAP_TYPE__ns1__getLcuListOperation (28)
/* ns1:getLcuListOperation */
class SOAP_CMAC _ns1__getLcuListOperation
{
public:
	char *dcu_USCOREid;	/* required element of type xsd:string */
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 28; } /* = unique id SOAP_TYPE__ns1__getLcuListOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__getLcuListOperation() { _ns1__getLcuListOperation::soap_default(NULL); }
	virtual ~_ns1__getLcuListOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__getLcuListOperationResponse
#define SOAP_TYPE__ns1__getLcuListOperationResponse (29)
/* ns1:getLcuListOperationResponse */
class SOAP_CMAC _ns1__getLcuListOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	int __sizelcu_USCORElist;	/* sequence of elements <lcu_list> */
	ns1__LCU_USCOREINFO_USCOREType **lcu_USCORElist;	/* optional element of type ns1:LCU_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 29; } /* = unique id SOAP_TYPE__ns1__getLcuListOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__getLcuListOperationResponse() { _ns1__getLcuListOperationResponse::soap_default(NULL); }
	virtual ~_ns1__getLcuListOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__updateRuntimeForUserOperation
#define SOAP_TYPE__ns1__updateRuntimeForUserOperation (30)
/* ns1:updateRuntimeForUserOperation */
class SOAP_CMAC _ns1__updateRuntimeForUserOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 30; } /* = unique id SOAP_TYPE__ns1__updateRuntimeForUserOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__updateRuntimeForUserOperation() { _ns1__updateRuntimeForUserOperation::soap_default(NULL); }
	virtual ~_ns1__updateRuntimeForUserOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__updateRuntimeForUserOperationResponse
#define SOAP_TYPE__ns1__updateRuntimeForUserOperationResponse (31)
/* ns1:updateRuntimeForUserOperationResponse */
class SOAP_CMAC _ns1__updateRuntimeForUserOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	int __sizelcu_USCORElist;	/* sequence of elements <lcu_list> */
	ns1__LCU_USCOREINFO_USCOREType **lcu_USCORElist;	/* optional element of type ns1:LCU_INFO_Type */
	int __sizedcu_USCORElist;	/* sequence of elements <dcu_list> */
	ns1__DCU_USCOREINFO_USCOREType **dcu_USCORElist;	/* optional element of type ns1:DCU_INFO_Type */
	int __sizeeventlog_USCORElist;	/* sequence of elements <eventlog_list> */
	ns1__EVENT_USCORELOG_USCOREINFO_USCOREType **eventlog_USCORElist;	/* optional element of type ns1:EVENT_LOG_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 31; } /* = unique id SOAP_TYPE__ns1__updateRuntimeForUserOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__updateRuntimeForUserOperationResponse() { _ns1__updateRuntimeForUserOperationResponse::soap_default(NULL); }
	virtual ~_ns1__updateRuntimeForUserOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__getLineListOperation
#define SOAP_TYPE__ns1__getLineListOperation (32)
/* ns1:getLineListOperation */
class SOAP_CMAC _ns1__getLineListOperation
{
public:
	char *dcu_USCOREid;	/* required element of type xsd:string */
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 32; } /* = unique id SOAP_TYPE__ns1__getLineListOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__getLineListOperation() { _ns1__getLineListOperation::soap_default(NULL); }
	virtual ~_ns1__getLineListOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__getLineListOperationResponse
#define SOAP_TYPE__ns1__getLineListOperationResponse (33)
/* ns1:getLineListOperationResponse */
class SOAP_CMAC _ns1__getLineListOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	int __sizeline_USCORElist;	/* sequence of elements <line_list> */
	ns1__LINE_USCOREINFO_USCOREType **line_USCORElist;	/* optional element of type ns1:LINE_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 33; } /* = unique id SOAP_TYPE__ns1__getLineListOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__getLineListOperationResponse() { _ns1__getLineListOperationResponse::soap_default(NULL); }
	virtual ~_ns1__getLineListOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__addDcuOperation
#define SOAP_TYPE__ns1__addDcuOperation (34)
/* ns1:addDcuOperation */
class SOAP_CMAC _ns1__addDcuOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	ns1__DCU_USCOREINFO_USCOREType *dcu;	/* required element of type ns1:DCU_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 34; } /* = unique id SOAP_TYPE__ns1__addDcuOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__addDcuOperation() { _ns1__addDcuOperation::soap_default(NULL); }
	virtual ~_ns1__addDcuOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__addDcuOperationResponse
#define SOAP_TYPE__ns1__addDcuOperationResponse (35)
/* ns1:addDcuOperationResponse */
class SOAP_CMAC _ns1__addDcuOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 35; } /* = unique id SOAP_TYPE__ns1__addDcuOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__addDcuOperationResponse() { _ns1__addDcuOperationResponse::soap_default(NULL); }
	virtual ~_ns1__addDcuOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__removeDcuOperation
#define SOAP_TYPE__ns1__removeDcuOperation (36)
/* ns1:removeDcuOperation */
class SOAP_CMAC _ns1__removeDcuOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	char *dcu_USCOREid;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 36; } /* = unique id SOAP_TYPE__ns1__removeDcuOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__removeDcuOperation() { _ns1__removeDcuOperation::soap_default(NULL); }
	virtual ~_ns1__removeDcuOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__removeDcuOperationResponse
#define SOAP_TYPE__ns1__removeDcuOperationResponse (37)
/* ns1:removeDcuOperationResponse */
class SOAP_CMAC _ns1__removeDcuOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 37; } /* = unique id SOAP_TYPE__ns1__removeDcuOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__removeDcuOperationResponse() { _ns1__removeDcuOperationResponse::soap_default(NULL); }
	virtual ~_ns1__removeDcuOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__editDcuOperation
#define SOAP_TYPE__ns1__editDcuOperation (38)
/* ns1:editDcuOperation */
class SOAP_CMAC _ns1__editDcuOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	char *dcu_USCOREid;	/* required element of type xsd:string */
	ns1__DCU_USCOREINFO_USCOREType *dcu_USCOREdata;	/* required element of type ns1:DCU_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 38; } /* = unique id SOAP_TYPE__ns1__editDcuOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__editDcuOperation() { _ns1__editDcuOperation::soap_default(NULL); }
	virtual ~_ns1__editDcuOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__editDcuOperationResponse
#define SOAP_TYPE__ns1__editDcuOperationResponse (39)
/* ns1:editDcuOperationResponse */
class SOAP_CMAC _ns1__editDcuOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 39; } /* = unique id SOAP_TYPE__ns1__editDcuOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__editDcuOperationResponse() { _ns1__editDcuOperationResponse::soap_default(NULL); }
	virtual ~_ns1__editDcuOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__addLcuOperation
#define SOAP_TYPE__ns1__addLcuOperation (40)
/* ns1:addLcuOperation */
class SOAP_CMAC _ns1__addLcuOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	ns1__LCU_USCOREINFO_USCOREType *lcu;	/* required element of type ns1:LCU_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 40; } /* = unique id SOAP_TYPE__ns1__addLcuOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__addLcuOperation() { _ns1__addLcuOperation::soap_default(NULL); }
	virtual ~_ns1__addLcuOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__addLcuOperationResponse
#define SOAP_TYPE__ns1__addLcuOperationResponse (41)
/* ns1:addLcuOperationResponse */
class SOAP_CMAC _ns1__addLcuOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 41; } /* = unique id SOAP_TYPE__ns1__addLcuOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__addLcuOperationResponse() { _ns1__addLcuOperationResponse::soap_default(NULL); }
	virtual ~_ns1__addLcuOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__removeLcuOperation
#define SOAP_TYPE__ns1__removeLcuOperation (42)
/* ns1:removeLcuOperation */
class SOAP_CMAC _ns1__removeLcuOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	char *lcu_USCOREid;	/* required element of type xsd:string */
	char *dcu_USCOREid;	/* required element of type xsd:string */
	bool is_USCOREall_USCORElcu;	/* required element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 42; } /* = unique id SOAP_TYPE__ns1__removeLcuOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__removeLcuOperation() { _ns1__removeLcuOperation::soap_default(NULL); }
	virtual ~_ns1__removeLcuOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__removeLcuOperationResponse
#define SOAP_TYPE__ns1__removeLcuOperationResponse (43)
/* ns1:removeLcuOperationResponse */
class SOAP_CMAC _ns1__removeLcuOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 43; } /* = unique id SOAP_TYPE__ns1__removeLcuOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__removeLcuOperationResponse() { _ns1__removeLcuOperationResponse::soap_default(NULL); }
	virtual ~_ns1__removeLcuOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__editLcuOperation
#define SOAP_TYPE__ns1__editLcuOperation (44)
/* ns1:editLcuOperation */
class SOAP_CMAC _ns1__editLcuOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	char *lcu_USCOREid;	/* required element of type xsd:string */
	ns1__LCU_USCOREINFO_USCOREType *lcu_USCOREdata;	/* required element of type ns1:LCU_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 44; } /* = unique id SOAP_TYPE__ns1__editLcuOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__editLcuOperation() { _ns1__editLcuOperation::soap_default(NULL); }
	virtual ~_ns1__editLcuOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__editLcuOperationResponse
#define SOAP_TYPE__ns1__editLcuOperationResponse (45)
/* ns1:editLcuOperationResponse */
class SOAP_CMAC _ns1__editLcuOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 45; } /* = unique id SOAP_TYPE__ns1__editLcuOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__editLcuOperationResponse() { _ns1__editLcuOperationResponse::soap_default(NULL); }
	virtual ~_ns1__editLcuOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__addLineOperation
#define SOAP_TYPE__ns1__addLineOperation (46)
/* ns1:addLineOperation */
class SOAP_CMAC _ns1__addLineOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	ns1__LINE_USCOREINFO_USCOREType *line;	/* required element of type ns1:LINE_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 46; } /* = unique id SOAP_TYPE__ns1__addLineOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__addLineOperation() { _ns1__addLineOperation::soap_default(NULL); }
	virtual ~_ns1__addLineOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__addLineOperationResponse
#define SOAP_TYPE__ns1__addLineOperationResponse (47)
/* ns1:addLineOperationResponse */
class SOAP_CMAC _ns1__addLineOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 47; } /* = unique id SOAP_TYPE__ns1__addLineOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__addLineOperationResponse() { _ns1__addLineOperationResponse::soap_default(NULL); }
	virtual ~_ns1__addLineOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__removeLineOperation
#define SOAP_TYPE__ns1__removeLineOperation (48)
/* ns1:removeLineOperation */
class SOAP_CMAC _ns1__removeLineOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	int line_USCOREid;	/* required element of type xsd:int */
	char *dcu_USCOREid;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 48; } /* = unique id SOAP_TYPE__ns1__removeLineOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__removeLineOperation() { _ns1__removeLineOperation::soap_default(NULL); }
	virtual ~_ns1__removeLineOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__removeLineOperationResponse
#define SOAP_TYPE__ns1__removeLineOperationResponse (49)
/* ns1:removeLineOperationResponse */
class SOAP_CMAC _ns1__removeLineOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 49; } /* = unique id SOAP_TYPE__ns1__removeLineOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__removeLineOperationResponse() { _ns1__removeLineOperationResponse::soap_default(NULL); }
	virtual ~_ns1__removeLineOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__editLineOperation
#define SOAP_TYPE__ns1__editLineOperation (50)
/* ns1:editLineOperation */
class SOAP_CMAC _ns1__editLineOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	int line_USCOREid;	/* required element of type xsd:int */
	ns1__LINE_USCOREINFO_USCOREType *line_USCOREdata;	/* required element of type ns1:LINE_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 50; } /* = unique id SOAP_TYPE__ns1__editLineOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__editLineOperation() { _ns1__editLineOperation::soap_default(NULL); }
	virtual ~_ns1__editLineOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__editLineOperationResponse
#define SOAP_TYPE__ns1__editLineOperationResponse (51)
/* ns1:editLineOperationResponse */
class SOAP_CMAC _ns1__editLineOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 51; } /* = unique id SOAP_TYPE__ns1__editLineOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__editLineOperationResponse() { _ns1__editLineOperationResponse::soap_default(NULL); }
	virtual ~_ns1__editLineOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__addProgramOperation
#define SOAP_TYPE__ns1__addProgramOperation (52)
/* ns1:addProgramOperation */
class SOAP_CMAC _ns1__addProgramOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	char *program_USCOREname;	/* required element of type xsd:string */
	int program_USCOREzoneId;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 52; } /* = unique id SOAP_TYPE__ns1__addProgramOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__addProgramOperation() { _ns1__addProgramOperation::soap_default(NULL); }
	virtual ~_ns1__addProgramOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__addProgramOperationResponse
#define SOAP_TYPE__ns1__addProgramOperationResponse (53)
/* ns1:addProgramOperationResponse */
class SOAP_CMAC _ns1__addProgramOperationResponse
{
public:
	int program_USCOREid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* required element of type ns1:MESSAGE_RESULT_Enum */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 53; } /* = unique id SOAP_TYPE__ns1__addProgramOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__addProgramOperationResponse() { _ns1__addProgramOperationResponse::soap_default(NULL); }
	virtual ~_ns1__addProgramOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__removeProgramOperation
#define SOAP_TYPE__ns1__removeProgramOperation (54)
/* ns1:removeProgramOperation */
class SOAP_CMAC _ns1__removeProgramOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	int program_USCOREid;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 54; } /* = unique id SOAP_TYPE__ns1__removeProgramOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__removeProgramOperation() { _ns1__removeProgramOperation::soap_default(NULL); }
	virtual ~_ns1__removeProgramOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__removeProgramOperationResponse
#define SOAP_TYPE__ns1__removeProgramOperationResponse (55)
/* ns1:removeProgramOperationResponse */
class SOAP_CMAC _ns1__removeProgramOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 55; } /* = unique id SOAP_TYPE__ns1__removeProgramOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__removeProgramOperationResponse() { _ns1__removeProgramOperationResponse::soap_default(NULL); }
	virtual ~_ns1__removeProgramOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__controlLcuOperation
#define SOAP_TYPE__ns1__controlLcuOperation (56)
/* ns1:controlLcuOperation */
class SOAP_CMAC _ns1__controlLcuOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	int __sizelculist;	/* sequence of elements <lculist> */
	ns1__LCU_USCOREINFO_USCOREType **lculist;	/* optional element of type ns1:LCU_INFO_Type */
	bool istemp;	/* required element of type xsd:boolean */
	char *dcuid;	/* required element of type xsd:string */
	bool is_USCOREProgram;	/* required element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 56; } /* = unique id SOAP_TYPE__ns1__controlLcuOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__controlLcuOperation() { _ns1__controlLcuOperation::soap_default(NULL); }
	virtual ~_ns1__controlLcuOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__controlLcuOperationResponse
#define SOAP_TYPE__ns1__controlLcuOperationResponse (57)
/* ns1:controlLcuOperationResponse */
class SOAP_CMAC _ns1__controlLcuOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	int __sizelculist;	/* sequence of elements <lculist> */
	ns1__LCU_USCOREINFO_USCOREType **lculist;	/* optional element of type ns1:LCU_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 57; } /* = unique id SOAP_TYPE__ns1__controlLcuOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__controlLcuOperationResponse() { _ns1__controlLcuOperationResponse::soap_default(NULL); }
	virtual ~_ns1__controlLcuOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__controlLineOperation
#define SOAP_TYPE__ns1__controlLineOperation (58)
/* ns1:controlLineOperation */
class SOAP_CMAC _ns1__controlLineOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	char *dcu_USCOREid;	/* required element of type xsd:string */
	int __sizeline_USCORElist;	/* sequence of elements <line_list> */
	ns1__LINE_USCOREINFO_USCOREType **line_USCORElist;	/* optional element of type ns1:LINE_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 58; } /* = unique id SOAP_TYPE__ns1__controlLineOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__controlLineOperation() { _ns1__controlLineOperation::soap_default(NULL); }
	virtual ~_ns1__controlLineOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__controlLineOperationResponse
#define SOAP_TYPE__ns1__controlLineOperationResponse (59)
/* ns1:controlLineOperationResponse */
class SOAP_CMAC _ns1__controlLineOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 59; } /* = unique id SOAP_TYPE__ns1__controlLineOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__controlLineOperationResponse() { _ns1__controlLineOperationResponse::soap_default(NULL); }
	virtual ~_ns1__controlLineOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__setProgramDcuOperation
#define SOAP_TYPE__ns1__setProgramDcuOperation (60)
/* ns1:setProgramDcuOperation */
class SOAP_CMAC _ns1__setProgramDcuOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	char *dcu_USCOREid;	/* required element of type xsd:string */
	int dcu_USCOREmode;	/* required element of type xsd:int */
	int dcu_USCOREprogramId;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 60; } /* = unique id SOAP_TYPE__ns1__setProgramDcuOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__setProgramDcuOperation() { _ns1__setProgramDcuOperation::soap_default(NULL); }
	virtual ~_ns1__setProgramDcuOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__setProgramDcuOperationResponse
#define SOAP_TYPE__ns1__setProgramDcuOperationResponse (61)
/* ns1:setProgramDcuOperationResponse */
class SOAP_CMAC _ns1__setProgramDcuOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 61; } /* = unique id SOAP_TYPE__ns1__setProgramDcuOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__setProgramDcuOperationResponse() { _ns1__setProgramDcuOperationResponse::soap_default(NULL); }
	virtual ~_ns1__setProgramDcuOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__getEventLogOperation
#define SOAP_TYPE__ns1__getEventLogOperation (62)
/* ns1:getEventLogOperation */
class SOAP_CMAC _ns1__getEventLogOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	char *dcu_USCOREid;	/* required element of type xsd:string */
	enum ns1__EVENTLOG_USCORETYPE_USCOREEnum eventlog_USCOREtype;	/* required element of type ns1:EVENTLOG_TYPE_Enum */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 62; } /* = unique id SOAP_TYPE__ns1__getEventLogOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__getEventLogOperation() { _ns1__getEventLogOperation::soap_default(NULL); }
	virtual ~_ns1__getEventLogOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__getEventLogOperationResponse
#define SOAP_TYPE__ns1__getEventLogOperationResponse (63)
/* ns1:getEventLogOperationResponse */
class SOAP_CMAC _ns1__getEventLogOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	int __sizeeventlog_USCORElist;	/* sequence of elements <eventlog_list> */
	ns1__EVENT_USCORELOG_USCOREINFO_USCOREType **eventlog_USCORElist;	/* optional element of type ns1:EVENT_LOG_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 63; } /* = unique id SOAP_TYPE__ns1__getEventLogOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__getEventLogOperationResponse() { _ns1__getEventLogOperationResponse::soap_default(NULL); }
	virtual ~_ns1__getEventLogOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__updateReadEventLogOperation
#define SOAP_TYPE__ns1__updateReadEventLogOperation (64)
/* ns1:updateReadEventLogOperation */
class SOAP_CMAC _ns1__updateReadEventLogOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	int even_USCOREid;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 64; } /* = unique id SOAP_TYPE__ns1__updateReadEventLogOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__updateReadEventLogOperation() { _ns1__updateReadEventLogOperation::soap_default(NULL); }
	virtual ~_ns1__updateReadEventLogOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__updateReadEventLogOperationResponse
#define SOAP_TYPE__ns1__updateReadEventLogOperationResponse (65)
/* ns1:updateReadEventLogOperationResponse */
class SOAP_CMAC _ns1__updateReadEventLogOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 65; } /* = unique id SOAP_TYPE__ns1__updateReadEventLogOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__updateReadEventLogOperationResponse() { _ns1__updateReadEventLogOperationResponse::soap_default(NULL); }
	virtual ~_ns1__updateReadEventLogOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__deleteEventLogOperation
#define SOAP_TYPE__ns1__deleteEventLogOperation (66)
/* ns1:deleteEventLogOperation */
class SOAP_CMAC _ns1__deleteEventLogOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	int even_USCOREid;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 66; } /* = unique id SOAP_TYPE__ns1__deleteEventLogOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__deleteEventLogOperation() { _ns1__deleteEventLogOperation::soap_default(NULL); }
	virtual ~_ns1__deleteEventLogOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__deleteEventLogOperationResponse
#define SOAP_TYPE__ns1__deleteEventLogOperationResponse (67)
/* ns1:deleteEventLogOperationResponse */
class SOAP_CMAC _ns1__deleteEventLogOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 67; } /* = unique id SOAP_TYPE__ns1__deleteEventLogOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__deleteEventLogOperationResponse() { _ns1__deleteEventLogOperationResponse::soap_default(NULL); }
	virtual ~_ns1__deleteEventLogOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__getUserLogOperation
#define SOAP_TYPE__ns1__getUserLogOperation (68)
/* ns1:getUserLogOperation */
class SOAP_CMAC _ns1__getUserLogOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	int user_USCOREid;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 68; } /* = unique id SOAP_TYPE__ns1__getUserLogOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__getUserLogOperation() { _ns1__getUserLogOperation::soap_default(NULL); }
	virtual ~_ns1__getUserLogOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__getUserLogOperationResponse
#define SOAP_TYPE__ns1__getUserLogOperationResponse (69)
/* ns1:getUserLogOperationResponse */
class SOAP_CMAC _ns1__getUserLogOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	int __sizeuserlog_USCORElist;	/* sequence of elements <userlog_list> */
	ns1__USER_USCORELOG_USCOREINFO_USCOREType **userlog_USCORElist;	/* optional element of type ns1:USER_LOG_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 69; } /* = unique id SOAP_TYPE__ns1__getUserLogOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__getUserLogOperationResponse() { _ns1__getUserLogOperationResponse::soap_default(NULL); }
	virtual ~_ns1__getUserLogOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__deleteUserLogOperation
#define SOAP_TYPE__ns1__deleteUserLogOperation (70)
/* ns1:deleteUserLogOperation */
class SOAP_CMAC _ns1__deleteUserLogOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	int userlog_USCOREid;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 70; } /* = unique id SOAP_TYPE__ns1__deleteUserLogOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__deleteUserLogOperation() { _ns1__deleteUserLogOperation::soap_default(NULL); }
	virtual ~_ns1__deleteUserLogOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__deleteUserLogOperationResponse
#define SOAP_TYPE__ns1__deleteUserLogOperationResponse (71)
/* ns1:deleteUserLogOperationResponse */
class SOAP_CMAC _ns1__deleteUserLogOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 71; } /* = unique id SOAP_TYPE__ns1__deleteUserLogOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__deleteUserLogOperationResponse() { _ns1__deleteUserLogOperationResponse::soap_default(NULL); }
	virtual ~_ns1__deleteUserLogOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__getAllZoneOperation
#define SOAP_TYPE__ns1__getAllZoneOperation (72)
/* ns1:getAllZoneOperation */
class SOAP_CMAC _ns1__getAllZoneOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 72; } /* = unique id SOAP_TYPE__ns1__getAllZoneOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__getAllZoneOperation() { _ns1__getAllZoneOperation::soap_default(NULL); }
	virtual ~_ns1__getAllZoneOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__getAllZoneOperationResponse
#define SOAP_TYPE__ns1__getAllZoneOperationResponse (73)
/* ns1:getAllZoneOperationResponse */
class SOAP_CMAC _ns1__getAllZoneOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	int __sizezone_USCORElist;	/* sequence of elements <zone_list> */
	ns1__ZONE_USCOREINFO_USCOREType **zone_USCORElist;	/* optional element of type ns1:ZONE_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 73; } /* = unique id SOAP_TYPE__ns1__getAllZoneOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__getAllZoneOperationResponse() { _ns1__getAllZoneOperationResponse::soap_default(NULL); }
	virtual ~_ns1__getAllZoneOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__getAllZoneForUserOperation
#define SOAP_TYPE__ns1__getAllZoneForUserOperation (74)
/* ns1:getAllZoneForUserOperation */
class SOAP_CMAC _ns1__getAllZoneForUserOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	int user_USCOREid;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 74; } /* = unique id SOAP_TYPE__ns1__getAllZoneForUserOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__getAllZoneForUserOperation() { _ns1__getAllZoneForUserOperation::soap_default(NULL); }
	virtual ~_ns1__getAllZoneForUserOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__getAllZoneForUserOperationResponse
#define SOAP_TYPE__ns1__getAllZoneForUserOperationResponse (75)
/* ns1:getAllZoneForUserOperationResponse */
class SOAP_CMAC _ns1__getAllZoneForUserOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	int __sizezone_USCORElist;	/* sequence of elements <zone_list> */
	ns1__ZONE_USCOREINFO_USCOREType **zone_USCORElist;	/* optional element of type ns1:ZONE_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 75; } /* = unique id SOAP_TYPE__ns1__getAllZoneForUserOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__getAllZoneForUserOperationResponse() { _ns1__getAllZoneForUserOperationResponse::soap_default(NULL); }
	virtual ~_ns1__getAllZoneForUserOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__SetDcuToZoneOperation
#define SOAP_TYPE__ns1__SetDcuToZoneOperation (76)
/* ns1:SetDcuToZoneOperation */
class SOAP_CMAC _ns1__SetDcuToZoneOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	int __sizedcu_USCORElist;	/* sequence of elements <dcu_list> */
	ns1__DCU_USCOREINFO_USCOREType **dcu_USCORElist;	/* optional element of type ns1:DCU_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 76; } /* = unique id SOAP_TYPE__ns1__SetDcuToZoneOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__SetDcuToZoneOperation() { _ns1__SetDcuToZoneOperation::soap_default(NULL); }
	virtual ~_ns1__SetDcuToZoneOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__SetDcuToZoneOperationResponse
#define SOAP_TYPE__ns1__SetDcuToZoneOperationResponse (77)
/* ns1:SetDcuToZoneOperationResponse */
class SOAP_CMAC _ns1__SetDcuToZoneOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 77; } /* = unique id SOAP_TYPE__ns1__SetDcuToZoneOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__SetDcuToZoneOperationResponse() { _ns1__SetDcuToZoneOperationResponse::soap_default(NULL); }
	virtual ~_ns1__SetDcuToZoneOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__addZoneOperation
#define SOAP_TYPE__ns1__addZoneOperation (78)
/* ns1:addZoneOperation */
class SOAP_CMAC _ns1__addZoneOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	ns1__ZONE_USCOREINFO_USCOREType *zone;	/* required element of type ns1:ZONE_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 78; } /* = unique id SOAP_TYPE__ns1__addZoneOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__addZoneOperation() { _ns1__addZoneOperation::soap_default(NULL); }
	virtual ~_ns1__addZoneOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__addZoneOperationResponse
#define SOAP_TYPE__ns1__addZoneOperationResponse (79)
/* ns1:addZoneOperationResponse */
class SOAP_CMAC _ns1__addZoneOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	int zone_USCOREid;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 79; } /* = unique id SOAP_TYPE__ns1__addZoneOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__addZoneOperationResponse() { _ns1__addZoneOperationResponse::soap_default(NULL); }
	virtual ~_ns1__addZoneOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__editZoneOperation
#define SOAP_TYPE__ns1__editZoneOperation (80)
/* ns1:editZoneOperation */
class SOAP_CMAC _ns1__editZoneOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	ns1__ZONE_USCOREINFO_USCOREType *zone;	/* required element of type ns1:ZONE_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 80; } /* = unique id SOAP_TYPE__ns1__editZoneOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__editZoneOperation() { _ns1__editZoneOperation::soap_default(NULL); }
	virtual ~_ns1__editZoneOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__editZoneOperationResponse
#define SOAP_TYPE__ns1__editZoneOperationResponse (81)
/* ns1:editZoneOperationResponse */
class SOAP_CMAC _ns1__editZoneOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 81; } /* = unique id SOAP_TYPE__ns1__editZoneOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__editZoneOperationResponse() { _ns1__editZoneOperationResponse::soap_default(NULL); }
	virtual ~_ns1__editZoneOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__removeZoneOperation
#define SOAP_TYPE__ns1__removeZoneOperation (82)
/* ns1:removeZoneOperation */
class SOAP_CMAC _ns1__removeZoneOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	int zoneid;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 82; } /* = unique id SOAP_TYPE__ns1__removeZoneOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__removeZoneOperation() { _ns1__removeZoneOperation::soap_default(NULL); }
	virtual ~_ns1__removeZoneOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__removeZoneOperationResponse
#define SOAP_TYPE__ns1__removeZoneOperationResponse (83)
/* ns1:removeZoneOperationResponse */
class SOAP_CMAC _ns1__removeZoneOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 83; } /* = unique id SOAP_TYPE__ns1__removeZoneOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__removeZoneOperationResponse() { _ns1__removeZoneOperationResponse::soap_default(NULL); }
	virtual ~_ns1__removeZoneOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__getAllUserOperation
#define SOAP_TYPE__ns1__getAllUserOperation (84)
/* ns1:getAllUserOperation */
class SOAP_CMAC _ns1__getAllUserOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	int userid;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 84; } /* = unique id SOAP_TYPE__ns1__getAllUserOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__getAllUserOperation() { _ns1__getAllUserOperation::soap_default(NULL); }
	virtual ~_ns1__getAllUserOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__getAllUserOperationResponse
#define SOAP_TYPE__ns1__getAllUserOperationResponse (85)
/* ns1:getAllUserOperationResponse */
class SOAP_CMAC _ns1__getAllUserOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	int __sizeuser_USCORElist;	/* sequence of elements <user_list> */
	ns1__USER_USCOREINFO_USCOREType **user_USCORElist;	/* optional element of type ns1:USER_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 85; } /* = unique id SOAP_TYPE__ns1__getAllUserOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__getAllUserOperationResponse() { _ns1__getAllUserOperationResponse::soap_default(NULL); }
	virtual ~_ns1__getAllUserOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__addUserOperation
#define SOAP_TYPE__ns1__addUserOperation (86)
/* ns1:addUserOperation */
class SOAP_CMAC _ns1__addUserOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	ns1__USER_USCOREINFO_USCOREType *user;	/* required element of type ns1:USER_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 86; } /* = unique id SOAP_TYPE__ns1__addUserOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__addUserOperation() { _ns1__addUserOperation::soap_default(NULL); }
	virtual ~_ns1__addUserOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__addUserOperationResponse
#define SOAP_TYPE__ns1__addUserOperationResponse (87)
/* ns1:addUserOperationResponse */
class SOAP_CMAC _ns1__addUserOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	int user_USCOREid;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 87; } /* = unique id SOAP_TYPE__ns1__addUserOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__addUserOperationResponse() { _ns1__addUserOperationResponse::soap_default(NULL); }
	virtual ~_ns1__addUserOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__editUserOperation
#define SOAP_TYPE__ns1__editUserOperation (88)
/* ns1:editUserOperation */
class SOAP_CMAC _ns1__editUserOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	ns1__USER_USCOREINFO_USCOREType *user;	/* required element of type ns1:USER_INFO_Type */
	bool isAddZone;	/* required element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 88; } /* = unique id SOAP_TYPE__ns1__editUserOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__editUserOperation() { _ns1__editUserOperation::soap_default(NULL); }
	virtual ~_ns1__editUserOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__editUserOperationResponse
#define SOAP_TYPE__ns1__editUserOperationResponse (89)
/* ns1:editUserOperationResponse */
class SOAP_CMAC _ns1__editUserOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 89; } /* = unique id SOAP_TYPE__ns1__editUserOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__editUserOperationResponse() { _ns1__editUserOperationResponse::soap_default(NULL); }
	virtual ~_ns1__editUserOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__removeUserOperation
#define SOAP_TYPE__ns1__removeUserOperation (90)
/* ns1:removeUserOperation */
class SOAP_CMAC _ns1__removeUserOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	int user_USCOREid;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 90; } /* = unique id SOAP_TYPE__ns1__removeUserOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__removeUserOperation() { _ns1__removeUserOperation::soap_default(NULL); }
	virtual ~_ns1__removeUserOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__removeUserOperationResponse
#define SOAP_TYPE__ns1__removeUserOperationResponse (91)
/* ns1:removeUserOperationResponse */
class SOAP_CMAC _ns1__removeUserOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 91; } /* = unique id SOAP_TYPE__ns1__removeUserOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__removeUserOperationResponse() { _ns1__removeUserOperationResponse::soap_default(NULL); }
	virtual ~_ns1__removeUserOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__editUserByUserOperation
#define SOAP_TYPE__ns1__editUserByUserOperation (92)
/* ns1:editUserByUserOperation */
class SOAP_CMAC _ns1__editUserByUserOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	ns1__USER_USCOREINFO_USCOREType *user;	/* required element of type ns1:USER_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 92; } /* = unique id SOAP_TYPE__ns1__editUserByUserOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__editUserByUserOperation() { _ns1__editUserByUserOperation::soap_default(NULL); }
	virtual ~_ns1__editUserByUserOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__editUserByUserOperationResponse
#define SOAP_TYPE__ns1__editUserByUserOperationResponse (93)
/* ns1:editUserByUserOperationResponse */
class SOAP_CMAC _ns1__editUserByUserOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 93; } /* = unique id SOAP_TYPE__ns1__editUserByUserOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__editUserByUserOperationResponse() { _ns1__editUserByUserOperationResponse::soap_default(NULL); }
	virtual ~_ns1__editUserByUserOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__getProgramOperation
#define SOAP_TYPE__ns1__getProgramOperation (94)
/* ns1:getProgramOperation */
class SOAP_CMAC _ns1__getProgramOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	int program_USCOREid;	/* required element of type xsd:int */
	int zone_USCOREid;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 94; } /* = unique id SOAP_TYPE__ns1__getProgramOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__getProgramOperation() { _ns1__getProgramOperation::soap_default(NULL); }
	virtual ~_ns1__getProgramOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__getProgramOperationResponse
#define SOAP_TYPE__ns1__getProgramOperationResponse (95)
/* ns1:getProgramOperationResponse */
class SOAP_CMAC _ns1__getProgramOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	int __sizeprogram_USCORElist;	/* sequence of elements <program_list> */
	ns1__PROGRAM_USCOREINFO_USCOREType **program_USCORElist;	/* optional element of type ns1:PROGRAM_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 95; } /* = unique id SOAP_TYPE__ns1__getProgramOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__getProgramOperationResponse() { _ns1__getProgramOperationResponse::soap_default(NULL); }
	virtual ~_ns1__getProgramOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__editProgramOperation
#define SOAP_TYPE__ns1__editProgramOperation (96)
/* ns1:editProgramOperation */
class SOAP_CMAC _ns1__editProgramOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	ns1__PROGRAM_USCOREINFO_USCOREType *program;	/* required element of type ns1:PROGRAM_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 96; } /* = unique id SOAP_TYPE__ns1__editProgramOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__editProgramOperation() { _ns1__editProgramOperation::soap_default(NULL); }
	virtual ~_ns1__editProgramOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__editProgramOperationResponse
#define SOAP_TYPE__ns1__editProgramOperationResponse (97)
/* ns1:editProgramOperationResponse */
class SOAP_CMAC _ns1__editProgramOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 97; } /* = unique id SOAP_TYPE__ns1__editProgramOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__editProgramOperationResponse() { _ns1__editProgramOperationResponse::soap_default(NULL); }
	virtual ~_ns1__editProgramOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__getDayScheduleOperation
#define SOAP_TYPE__ns1__getDayScheduleOperation (98)
/* ns1:getDayScheduleOperation */
class SOAP_CMAC _ns1__getDayScheduleOperation
{
public:
	int program_USCOREid;	/* required element of type xsd:int */
	int dayschedule_USCOREid;	/* required element of type xsd:int */
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 98; } /* = unique id SOAP_TYPE__ns1__getDayScheduleOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__getDayScheduleOperation() { _ns1__getDayScheduleOperation::soap_default(NULL); }
	virtual ~_ns1__getDayScheduleOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__getDayScheduleOperationResponse
#define SOAP_TYPE__ns1__getDayScheduleOperationResponse (99)
/* ns1:getDayScheduleOperationResponse */
class SOAP_CMAC _ns1__getDayScheduleOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	int __sizedayschedule_USCORElist;	/* sequence of elements <dayschedule_list> */
	ns1__DAYSCHEDULE_USCOREINFO_USCOREType **dayschedule_USCORElist;	/* optional element of type ns1:DAYSCHEDULE_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 99; } /* = unique id SOAP_TYPE__ns1__getDayScheduleOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__getDayScheduleOperationResponse() { _ns1__getDayScheduleOperationResponse::soap_default(NULL); }
	virtual ~_ns1__getDayScheduleOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__editDayScheduleOperation
#define SOAP_TYPE__ns1__editDayScheduleOperation (100)
/* ns1:editDayScheduleOperation */
class SOAP_CMAC _ns1__editDayScheduleOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	ns1__DAYSCHEDULE_USCOREINFO_USCOREType *dayschedule;	/* required element of type ns1:DAYSCHEDULE_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 100; } /* = unique id SOAP_TYPE__ns1__editDayScheduleOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__editDayScheduleOperation() { _ns1__editDayScheduleOperation::soap_default(NULL); }
	virtual ~_ns1__editDayScheduleOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__editDayScheduleOperationResponse
#define SOAP_TYPE__ns1__editDayScheduleOperationResponse (101)
/* ns1:editDayScheduleOperationResponse */
class SOAP_CMAC _ns1__editDayScheduleOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 101; } /* = unique id SOAP_TYPE__ns1__editDayScheduleOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__editDayScheduleOperationResponse() { _ns1__editDayScheduleOperationResponse::soap_default(NULL); }
	virtual ~_ns1__editDayScheduleOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__removeDayScheduleOperation
#define SOAP_TYPE__ns1__removeDayScheduleOperation (102)
/* ns1:removeDayScheduleOperation */
class SOAP_CMAC _ns1__removeDayScheduleOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	int dayschedule_USCOREid;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 102; } /* = unique id SOAP_TYPE__ns1__removeDayScheduleOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__removeDayScheduleOperation() { _ns1__removeDayScheduleOperation::soap_default(NULL); }
	virtual ~_ns1__removeDayScheduleOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__removeDayScheduleOperationResponse
#define SOAP_TYPE__ns1__removeDayScheduleOperationResponse (103)
/* ns1:removeDayScheduleOperationResponse */
class SOAP_CMAC _ns1__removeDayScheduleOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 103; } /* = unique id SOAP_TYPE__ns1__removeDayScheduleOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__removeDayScheduleOperationResponse() { _ns1__removeDayScheduleOperationResponse::soap_default(NULL); }
	virtual ~_ns1__removeDayScheduleOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__addDayScheduleOperation
#define SOAP_TYPE__ns1__addDayScheduleOperation (104)
/* ns1:addDayScheduleOperation */
class SOAP_CMAC _ns1__addDayScheduleOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	ns1__DAYSCHEDULE_USCOREINFO_USCOREType *dayschedule;	/* required element of type ns1:DAYSCHEDULE_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 104; } /* = unique id SOAP_TYPE__ns1__addDayScheduleOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__addDayScheduleOperation() { _ns1__addDayScheduleOperation::soap_default(NULL); }
	virtual ~_ns1__addDayScheduleOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__addDayScheduleOperationResponse
#define SOAP_TYPE__ns1__addDayScheduleOperationResponse (105)
/* ns1:addDayScheduleOperationResponse */
class SOAP_CMAC _ns1__addDayScheduleOperationResponse
{
public:
	int dayschedule_USCOREid;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* required element of type ns1:MESSAGE_RESULT_Enum */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 105; } /* = unique id SOAP_TYPE__ns1__addDayScheduleOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__addDayScheduleOperationResponse() { _ns1__addDayScheduleOperationResponse::soap_default(NULL); }
	virtual ~_ns1__addDayScheduleOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__getListScheduleOperation
#define SOAP_TYPE__ns1__getListScheduleOperation (106)
/* ns1:getListScheduleOperation */
class SOAP_CMAC _ns1__getListScheduleOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	int listschedule_USCOREid;	/* required element of type xsd:int */
	int listschedule_USCOREprogramid;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 106; } /* = unique id SOAP_TYPE__ns1__getListScheduleOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__getListScheduleOperation() { _ns1__getListScheduleOperation::soap_default(NULL); }
	virtual ~_ns1__getListScheduleOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__getListScheduleOperationResponse
#define SOAP_TYPE__ns1__getListScheduleOperationResponse (107)
/* ns1:getListScheduleOperationResponse */
class SOAP_CMAC _ns1__getListScheduleOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	int __sizelistschedule_USCORElist;	/* sequence of elements <listschedule_list> */
	ns1__LISTSCHEDULE_USCOREINFO_USCOREType **listschedule_USCORElist;	/* optional element of type ns1:LISTSCHEDULE_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 107; } /* = unique id SOAP_TYPE__ns1__getListScheduleOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__getListScheduleOperationResponse() { _ns1__getListScheduleOperationResponse::soap_default(NULL); }
	virtual ~_ns1__getListScheduleOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__addListScheduleOperation
#define SOAP_TYPE__ns1__addListScheduleOperation (108)
/* ns1:addListScheduleOperation */
class SOAP_CMAC _ns1__addListScheduleOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	char *listschedule_USCOREname;	/* required element of type xsd:string */
	int listschedule_USCOREprogram_USCOREid;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 108; } /* = unique id SOAP_TYPE__ns1__addListScheduleOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__addListScheduleOperation() { _ns1__addListScheduleOperation::soap_default(NULL); }
	virtual ~_ns1__addListScheduleOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__addListScheduleOperationResponse
#define SOAP_TYPE__ns1__addListScheduleOperationResponse (109)
/* ns1:addListScheduleOperationResponse */
class SOAP_CMAC _ns1__addListScheduleOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	int listschedule_USCOREid;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 109; } /* = unique id SOAP_TYPE__ns1__addListScheduleOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__addListScheduleOperationResponse() { _ns1__addListScheduleOperationResponse::soap_default(NULL); }
	virtual ~_ns1__addListScheduleOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__editListScheduleOperation
#define SOAP_TYPE__ns1__editListScheduleOperation (110)
/* ns1:editListScheduleOperation */
class SOAP_CMAC _ns1__editListScheduleOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	ns1__LISTSCHEDULE_USCOREINFO_USCOREType *listschedule;	/* required element of type ns1:LISTSCHEDULE_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 110; } /* = unique id SOAP_TYPE__ns1__editListScheduleOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__editListScheduleOperation() { _ns1__editListScheduleOperation::soap_default(NULL); }
	virtual ~_ns1__editListScheduleOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__editListScheduleOperationResponse
#define SOAP_TYPE__ns1__editListScheduleOperationResponse (111)
/* ns1:editListScheduleOperationResponse */
class SOAP_CMAC _ns1__editListScheduleOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	int listscheduleId;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 111; } /* = unique id SOAP_TYPE__ns1__editListScheduleOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__editListScheduleOperationResponse() { _ns1__editListScheduleOperationResponse::soap_default(NULL); }
	virtual ~_ns1__editListScheduleOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__removeListScheduleOperation
#define SOAP_TYPE__ns1__removeListScheduleOperation (112)
/* ns1:removeListScheduleOperation */
class SOAP_CMAC _ns1__removeListScheduleOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	int listschedule_USCOREid;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 112; } /* = unique id SOAP_TYPE__ns1__removeListScheduleOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__removeListScheduleOperation() { _ns1__removeListScheduleOperation::soap_default(NULL); }
	virtual ~_ns1__removeListScheduleOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__removeListScheduleOperationResponse
#define SOAP_TYPE__ns1__removeListScheduleOperationResponse (113)
/* ns1:removeListScheduleOperationResponse */
class SOAP_CMAC _ns1__removeListScheduleOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 113; } /* = unique id SOAP_TYPE__ns1__removeListScheduleOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__removeListScheduleOperationResponse() { _ns1__removeListScheduleOperationResponse::soap_default(NULL); }
	virtual ~_ns1__removeListScheduleOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__getScheduleOperation
#define SOAP_TYPE__ns1__getScheduleOperation (114)
/* ns1:getScheduleOperation */
class SOAP_CMAC _ns1__getScheduleOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	int listschedule_USCOREid;	/* required element of type xsd:int */
	int schedule_USCOREid;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 114; } /* = unique id SOAP_TYPE__ns1__getScheduleOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__getScheduleOperation() { _ns1__getScheduleOperation::soap_default(NULL); }
	virtual ~_ns1__getScheduleOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__getScheduleOperationResponse
#define SOAP_TYPE__ns1__getScheduleOperationResponse (115)
/* ns1:getScheduleOperationResponse */
class SOAP_CMAC _ns1__getScheduleOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	int __sizeschedule_USCORElist;	/* sequence of elements <schedule_list> */
	ns1__SCHEDULE_USCOREINFO_USCOREType **schedule_USCORElist;	/* optional element of type ns1:SCHEDULE_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 115; } /* = unique id SOAP_TYPE__ns1__getScheduleOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__getScheduleOperationResponse() { _ns1__getScheduleOperationResponse::soap_default(NULL); }
	virtual ~_ns1__getScheduleOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__addScheduleOperation
#define SOAP_TYPE__ns1__addScheduleOperation (116)
/* ns1:addScheduleOperation */
class SOAP_CMAC _ns1__addScheduleOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	ns1__SCHEDULE_USCOREINFO_USCOREType *schedule;	/* required element of type ns1:SCHEDULE_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 116; } /* = unique id SOAP_TYPE__ns1__addScheduleOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__addScheduleOperation() { _ns1__addScheduleOperation::soap_default(NULL); }
	virtual ~_ns1__addScheduleOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__addScheduleOperationResponse
#define SOAP_TYPE__ns1__addScheduleOperationResponse (117)
/* ns1:addScheduleOperationResponse */
class SOAP_CMAC _ns1__addScheduleOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	int schedule_USCOREid;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 117; } /* = unique id SOAP_TYPE__ns1__addScheduleOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__addScheduleOperationResponse() { _ns1__addScheduleOperationResponse::soap_default(NULL); }
	virtual ~_ns1__addScheduleOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__editScheduleOperation
#define SOAP_TYPE__ns1__editScheduleOperation (118)
/* ns1:editScheduleOperation */
class SOAP_CMAC _ns1__editScheduleOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	ns1__SCHEDULE_USCOREINFO_USCOREType *schedule;	/* required element of type ns1:SCHEDULE_INFO_Type */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 118; } /* = unique id SOAP_TYPE__ns1__editScheduleOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__editScheduleOperation() { _ns1__editScheduleOperation::soap_default(NULL); }
	virtual ~_ns1__editScheduleOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__editScheduleOperationResponse
#define SOAP_TYPE__ns1__editScheduleOperationResponse (119)
/* ns1:editScheduleOperationResponse */
class SOAP_CMAC _ns1__editScheduleOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 119; } /* = unique id SOAP_TYPE__ns1__editScheduleOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__editScheduleOperationResponse() { _ns1__editScheduleOperationResponse::soap_default(NULL); }
	virtual ~_ns1__editScheduleOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__removeScheduleOperation
#define SOAP_TYPE__ns1__removeScheduleOperation (120)
/* ns1:removeScheduleOperation */
class SOAP_CMAC _ns1__removeScheduleOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	int schedule_USCOREid;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 120; } /* = unique id SOAP_TYPE__ns1__removeScheduleOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__removeScheduleOperation() { _ns1__removeScheduleOperation::soap_default(NULL); }
	virtual ~_ns1__removeScheduleOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__removeScheduleOperationResponse
#define SOAP_TYPE__ns1__removeScheduleOperationResponse (121)
/* ns1:removeScheduleOperationResponse */
class SOAP_CMAC _ns1__removeScheduleOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 121; } /* = unique id SOAP_TYPE__ns1__removeScheduleOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__removeScheduleOperationResponse() { _ns1__removeScheduleOperationResponse::soap_default(NULL); }
	virtual ~_ns1__removeScheduleOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__getLcuLogOperation
#define SOAP_TYPE__ns1__getLcuLogOperation (122)
/* ns1:getLcuLogOperation */
class SOAP_CMAC _ns1__getLcuLogOperation
{
public:
	ns1__CURR_USCORELOGIN_USCOREINFO_USCOREType *current_USCORElogin_USCOREinfo;	/* required element of type ns1:CURR_LOGIN_INFO_Type */
	char *lcuId;	/* required element of type xsd:string */
	char *timeForm;	/* required element of type xsd:string */
	char *timeTo;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 122; } /* = unique id SOAP_TYPE__ns1__getLcuLogOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__getLcuLogOperation() { _ns1__getLcuLogOperation::soap_default(NULL); }
	virtual ~_ns1__getLcuLogOperation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__getLcuLogOperationResponse
#define SOAP_TYPE__ns1__getLcuLogOperationResponse (123)
/* ns1:getLcuLogOperationResponse */
class SOAP_CMAC _ns1__getLcuLogOperationResponse
{
public:
	enum ns1__MESSAGE_USCORERESULT_USCOREEnum message_USCOREresult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:MESSAGE_RESULT_Enum */
	int __sizelcuLoglist;	/* sequence of elements <lcuLoglist> */
	ns1__LCULOGINFOType **lcuLoglist;	/* optional element of type ns1:LCULOGINFOType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 123; } /* = unique id SOAP_TYPE__ns1__getLcuLogOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__getLcuLogOperationResponse() { _ns1__getLcuLogOperationResponse::soap_default(NULL); }
	virtual ~_ns1__getLcuLogOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE___ns1__LoginOperation
#define SOAP_TYPE___ns1__LoginOperation (156)
/* Operation wrapper: */
struct __ns1__LoginOperation
{
public:
	_ns1__LoginOperation *ns1__LoginOperation;	/* optional element of type ns1:LoginOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__LoginPcOperation
#define SOAP_TYPE___ns1__LoginPcOperation (160)
/* Operation wrapper: */
struct __ns1__LoginPcOperation
{
public:
	_ns1__LoginPcOperation *ns1__LoginPcOperation;	/* optional element of type ns1:LoginPcOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__LogoutOperation
#define SOAP_TYPE___ns1__LogoutOperation (164)
/* Operation wrapper: */
struct __ns1__LogoutOperation
{
public:
	_ns1__LogoutOperation *ns1__LogoutOperation;	/* optional element of type ns1:LogoutOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__getDcuListOperation
#define SOAP_TYPE___ns1__getDcuListOperation (168)
/* Operation wrapper: */
struct __ns1__getDcuListOperation
{
public:
	_ns1__getDcuListOperation *ns1__getDcuListOperation;	/* optional element of type ns1:getDcuListOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__getLcuListOperation
#define SOAP_TYPE___ns1__getLcuListOperation (172)
/* Operation wrapper: */
struct __ns1__getLcuListOperation
{
public:
	_ns1__getLcuListOperation *ns1__getLcuListOperation;	/* optional element of type ns1:getLcuListOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__updateRuntimeForUserOperation
#define SOAP_TYPE___ns1__updateRuntimeForUserOperation (176)
/* Operation wrapper: */
struct __ns1__updateRuntimeForUserOperation
{
public:
	_ns1__updateRuntimeForUserOperation *ns1__updateRuntimeForUserOperation;	/* optional element of type ns1:updateRuntimeForUserOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__getLineListOperation
#define SOAP_TYPE___ns1__getLineListOperation (180)
/* Operation wrapper: */
struct __ns1__getLineListOperation
{
public:
	_ns1__getLineListOperation *ns1__getLineListOperation;	/* optional element of type ns1:getLineListOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__addDcuOperation
#define SOAP_TYPE___ns1__addDcuOperation (184)
/* Operation wrapper: */
struct __ns1__addDcuOperation
{
public:
	_ns1__addDcuOperation *ns1__addDcuOperation;	/* optional element of type ns1:addDcuOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__removeDcuOperation
#define SOAP_TYPE___ns1__removeDcuOperation (188)
/* Operation wrapper: */
struct __ns1__removeDcuOperation
{
public:
	_ns1__removeDcuOperation *ns1__removeDcuOperation;	/* optional element of type ns1:removeDcuOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__editDcuOperation
#define SOAP_TYPE___ns1__editDcuOperation (192)
/* Operation wrapper: */
struct __ns1__editDcuOperation
{
public:
	_ns1__editDcuOperation *ns1__editDcuOperation;	/* optional element of type ns1:editDcuOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__addLcuOperation
#define SOAP_TYPE___ns1__addLcuOperation (196)
/* Operation wrapper: */
struct __ns1__addLcuOperation
{
public:
	_ns1__addLcuOperation *ns1__addLcuOperation;	/* optional element of type ns1:addLcuOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__removeLcuOperation
#define SOAP_TYPE___ns1__removeLcuOperation (200)
/* Operation wrapper: */
struct __ns1__removeLcuOperation
{
public:
	_ns1__removeLcuOperation *ns1__removeLcuOperation;	/* optional element of type ns1:removeLcuOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__editLcuOperation
#define SOAP_TYPE___ns1__editLcuOperation (204)
/* Operation wrapper: */
struct __ns1__editLcuOperation
{
public:
	_ns1__editLcuOperation *ns1__editLcuOperation;	/* optional element of type ns1:editLcuOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__addLineOperation
#define SOAP_TYPE___ns1__addLineOperation (208)
/* Operation wrapper: */
struct __ns1__addLineOperation
{
public:
	_ns1__addLineOperation *ns1__addLineOperation;	/* optional element of type ns1:addLineOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__removeLineOperation
#define SOAP_TYPE___ns1__removeLineOperation (212)
/* Operation wrapper: */
struct __ns1__removeLineOperation
{
public:
	_ns1__removeLineOperation *ns1__removeLineOperation;	/* optional element of type ns1:removeLineOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__editLineOperation
#define SOAP_TYPE___ns1__editLineOperation (216)
/* Operation wrapper: */
struct __ns1__editLineOperation
{
public:
	_ns1__editLineOperation *ns1__editLineOperation;	/* optional element of type ns1:editLineOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__addProgramOperation
#define SOAP_TYPE___ns1__addProgramOperation (220)
/* Operation wrapper: */
struct __ns1__addProgramOperation
{
public:
	_ns1__addProgramOperation *ns1__addProgramOperation;	/* optional element of type ns1:addProgramOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__removeProgramOperation
#define SOAP_TYPE___ns1__removeProgramOperation (224)
/* Operation wrapper: */
struct __ns1__removeProgramOperation
{
public:
	_ns1__removeProgramOperation *ns1__removeProgramOperation;	/* optional element of type ns1:removeProgramOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__controlLcuOperation
#define SOAP_TYPE___ns1__controlLcuOperation (228)
/* Operation wrapper: */
struct __ns1__controlLcuOperation
{
public:
	_ns1__controlLcuOperation *ns1__controlLcuOperation;	/* optional element of type ns1:controlLcuOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__controlLineOperation
#define SOAP_TYPE___ns1__controlLineOperation (232)
/* Operation wrapper: */
struct __ns1__controlLineOperation
{
public:
	_ns1__controlLineOperation *ns1__controlLineOperation;	/* optional element of type ns1:controlLineOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__setProgramDcuOperation
#define SOAP_TYPE___ns1__setProgramDcuOperation (236)
/* Operation wrapper: */
struct __ns1__setProgramDcuOperation
{
public:
	_ns1__setProgramDcuOperation *ns1__setProgramDcuOperation;	/* optional element of type ns1:setProgramDcuOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__getEventLogOperation
#define SOAP_TYPE___ns1__getEventLogOperation (240)
/* Operation wrapper: */
struct __ns1__getEventLogOperation
{
public:
	_ns1__getEventLogOperation *ns1__getEventLogOperation;	/* optional element of type ns1:getEventLogOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__updateReadEventLogOperation
#define SOAP_TYPE___ns1__updateReadEventLogOperation (244)
/* Operation wrapper: */
struct __ns1__updateReadEventLogOperation
{
public:
	_ns1__updateReadEventLogOperation *ns1__updateReadEventLogOperation;	/* optional element of type ns1:updateReadEventLogOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__deleteEventLogOperation
#define SOAP_TYPE___ns1__deleteEventLogOperation (248)
/* Operation wrapper: */
struct __ns1__deleteEventLogOperation
{
public:
	_ns1__deleteEventLogOperation *ns1__deleteEventLogOperation;	/* optional element of type ns1:deleteEventLogOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__getUserLogOperation
#define SOAP_TYPE___ns1__getUserLogOperation (252)
/* Operation wrapper: */
struct __ns1__getUserLogOperation
{
public:
	_ns1__getUserLogOperation *ns1__getUserLogOperation;	/* optional element of type ns1:getUserLogOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__deleteUserLogOperation
#define SOAP_TYPE___ns1__deleteUserLogOperation (256)
/* Operation wrapper: */
struct __ns1__deleteUserLogOperation
{
public:
	_ns1__deleteUserLogOperation *ns1__deleteUserLogOperation;	/* optional element of type ns1:deleteUserLogOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__getAllZoneOperation
#define SOAP_TYPE___ns1__getAllZoneOperation (260)
/* Operation wrapper: */
struct __ns1__getAllZoneOperation
{
public:
	_ns1__getAllZoneOperation *ns1__getAllZoneOperation;	/* optional element of type ns1:getAllZoneOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__getAllZoneForUserOperation
#define SOAP_TYPE___ns1__getAllZoneForUserOperation (264)
/* Operation wrapper: */
struct __ns1__getAllZoneForUserOperation
{
public:
	_ns1__getAllZoneForUserOperation *ns1__getAllZoneForUserOperation;	/* optional element of type ns1:getAllZoneForUserOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__SetDcuToZoneOperation
#define SOAP_TYPE___ns1__SetDcuToZoneOperation (268)
/* Operation wrapper: */
struct __ns1__SetDcuToZoneOperation
{
public:
	_ns1__SetDcuToZoneOperation *ns1__SetDcuToZoneOperation;	/* optional element of type ns1:SetDcuToZoneOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__addZoneOperation
#define SOAP_TYPE___ns1__addZoneOperation (272)
/* Operation wrapper: */
struct __ns1__addZoneOperation
{
public:
	_ns1__addZoneOperation *ns1__addZoneOperation;	/* optional element of type ns1:addZoneOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__editZoneOperation
#define SOAP_TYPE___ns1__editZoneOperation (276)
/* Operation wrapper: */
struct __ns1__editZoneOperation
{
public:
	_ns1__editZoneOperation *ns1__editZoneOperation;	/* optional element of type ns1:editZoneOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__removeZoneOperation
#define SOAP_TYPE___ns1__removeZoneOperation (280)
/* Operation wrapper: */
struct __ns1__removeZoneOperation
{
public:
	_ns1__removeZoneOperation *ns1__removeZoneOperation;	/* optional element of type ns1:removeZoneOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__getAllUserOperation
#define SOAP_TYPE___ns1__getAllUserOperation (284)
/* Operation wrapper: */
struct __ns1__getAllUserOperation
{
public:
	_ns1__getAllUserOperation *ns1__getAllUserOperation;	/* optional element of type ns1:getAllUserOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__addUserOperation
#define SOAP_TYPE___ns1__addUserOperation (288)
/* Operation wrapper: */
struct __ns1__addUserOperation
{
public:
	_ns1__addUserOperation *ns1__addUserOperation;	/* optional element of type ns1:addUserOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__editUserOperation
#define SOAP_TYPE___ns1__editUserOperation (292)
/* Operation wrapper: */
struct __ns1__editUserOperation
{
public:
	_ns1__editUserOperation *ns1__editUserOperation;	/* optional element of type ns1:editUserOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__removeUserOperation
#define SOAP_TYPE___ns1__removeUserOperation (296)
/* Operation wrapper: */
struct __ns1__removeUserOperation
{
public:
	_ns1__removeUserOperation *ns1__removeUserOperation;	/* optional element of type ns1:removeUserOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__editUserByUserOperation
#define SOAP_TYPE___ns1__editUserByUserOperation (300)
/* Operation wrapper: */
struct __ns1__editUserByUserOperation
{
public:
	_ns1__editUserByUserOperation *ns1__editUserByUserOperation;	/* optional element of type ns1:editUserByUserOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__getProgramOperation
#define SOAP_TYPE___ns1__getProgramOperation (304)
/* Operation wrapper: */
struct __ns1__getProgramOperation
{
public:
	_ns1__getProgramOperation *ns1__getProgramOperation;	/* optional element of type ns1:getProgramOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__editProgramOperation
#define SOAP_TYPE___ns1__editProgramOperation (308)
/* Operation wrapper: */
struct __ns1__editProgramOperation
{
public:
	_ns1__editProgramOperation *ns1__editProgramOperation;	/* optional element of type ns1:editProgramOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__getDayScheduleOperation
#define SOAP_TYPE___ns1__getDayScheduleOperation (312)
/* Operation wrapper: */
struct __ns1__getDayScheduleOperation
{
public:
	_ns1__getDayScheduleOperation *ns1__getDayScheduleOperation;	/* optional element of type ns1:getDayScheduleOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__editDayScheduleOperation
#define SOAP_TYPE___ns1__editDayScheduleOperation (316)
/* Operation wrapper: */
struct __ns1__editDayScheduleOperation
{
public:
	_ns1__editDayScheduleOperation *ns1__editDayScheduleOperation;	/* optional element of type ns1:editDayScheduleOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__removeDayScheduleOperation
#define SOAP_TYPE___ns1__removeDayScheduleOperation (320)
/* Operation wrapper: */
struct __ns1__removeDayScheduleOperation
{
public:
	_ns1__removeDayScheduleOperation *ns1__removeDayScheduleOperation;	/* optional element of type ns1:removeDayScheduleOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__addDayScheduleOperation
#define SOAP_TYPE___ns1__addDayScheduleOperation (324)
/* Operation wrapper: */
struct __ns1__addDayScheduleOperation
{
public:
	_ns1__addDayScheduleOperation *ns1__addDayScheduleOperation;	/* optional element of type ns1:addDayScheduleOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__getListScheduleOperation
#define SOAP_TYPE___ns1__getListScheduleOperation (328)
/* Operation wrapper: */
struct __ns1__getListScheduleOperation
{
public:
	_ns1__getListScheduleOperation *ns1__getListScheduleOperation;	/* optional element of type ns1:getListScheduleOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__addListScheduleOperation
#define SOAP_TYPE___ns1__addListScheduleOperation (332)
/* Operation wrapper: */
struct __ns1__addListScheduleOperation
{
public:
	_ns1__addListScheduleOperation *ns1__addListScheduleOperation;	/* optional element of type ns1:addListScheduleOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__editListScheduleOperation
#define SOAP_TYPE___ns1__editListScheduleOperation (336)
/* Operation wrapper: */
struct __ns1__editListScheduleOperation
{
public:
	_ns1__editListScheduleOperation *ns1__editListScheduleOperation;	/* optional element of type ns1:editListScheduleOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__removeListScheduleOperation
#define SOAP_TYPE___ns1__removeListScheduleOperation (340)
/* Operation wrapper: */
struct __ns1__removeListScheduleOperation
{
public:
	_ns1__removeListScheduleOperation *ns1__removeListScheduleOperation;	/* optional element of type ns1:removeListScheduleOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__getScheduleOperation
#define SOAP_TYPE___ns1__getScheduleOperation (344)
/* Operation wrapper: */
struct __ns1__getScheduleOperation
{
public:
	_ns1__getScheduleOperation *ns1__getScheduleOperation;	/* optional element of type ns1:getScheduleOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__addScheduleOperation
#define SOAP_TYPE___ns1__addScheduleOperation (348)
/* Operation wrapper: */
struct __ns1__addScheduleOperation
{
public:
	_ns1__addScheduleOperation *ns1__addScheduleOperation;	/* optional element of type ns1:addScheduleOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__editScheduleOperation
#define SOAP_TYPE___ns1__editScheduleOperation (352)
/* Operation wrapper: */
struct __ns1__editScheduleOperation
{
public:
	_ns1__editScheduleOperation *ns1__editScheduleOperation;	/* optional element of type ns1:editScheduleOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__removeScheduleOperation
#define SOAP_TYPE___ns1__removeScheduleOperation (356)
/* Operation wrapper: */
struct __ns1__removeScheduleOperation
{
public:
	_ns1__removeScheduleOperation *ns1__removeScheduleOperation;	/* optional element of type ns1:removeScheduleOperation */
};
#endif

#ifndef SOAP_TYPE___ns1__getLcuLogOperation
#define SOAP_TYPE___ns1__getLcuLogOperation (360)
/* Operation wrapper: */
struct __ns1__getLcuLogOperation
{
public:
	_ns1__getLcuLogOperation *ns1__getLcuLogOperation;	/* optional element of type ns1:getLcuLogOperation */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (361)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (362)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (364)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (367)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (368)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stubs                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__LoginOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__LoginOperation *ns1__LoginOperation, _ns1__LoginOperationResponse *ns1__LoginOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__LoginPcOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__LoginPcOperation *ns1__LoginPcOperation, _ns1__LoginPcOperationResponse *ns1__LoginPcOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__LogoutOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__LogoutOperation *ns1__LogoutOperation, _ns1__LogoutOperationResponse *ns1__LogoutOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getDcuListOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__getDcuListOperation *ns1__getDcuListOperation, _ns1__getDcuListOperationResponse *ns1__getDcuListOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getLcuListOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__getLcuListOperation *ns1__getLcuListOperation, _ns1__getLcuListOperationResponse *ns1__getLcuListOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__updateRuntimeForUserOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__updateRuntimeForUserOperation *ns1__updateRuntimeForUserOperation, _ns1__updateRuntimeForUserOperationResponse *ns1__updateRuntimeForUserOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getLineListOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__getLineListOperation *ns1__getLineListOperation, _ns1__getLineListOperationResponse *ns1__getLineListOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__addDcuOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__addDcuOperation *ns1__addDcuOperation, _ns1__addDcuOperationResponse *ns1__addDcuOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__removeDcuOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__removeDcuOperation *ns1__removeDcuOperation, _ns1__removeDcuOperationResponse *ns1__removeDcuOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__editDcuOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__editDcuOperation *ns1__editDcuOperation, _ns1__editDcuOperationResponse *ns1__editDcuOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__addLcuOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__addLcuOperation *ns1__addLcuOperation, _ns1__addLcuOperationResponse *ns1__addLcuOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__removeLcuOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__removeLcuOperation *ns1__removeLcuOperation, _ns1__removeLcuOperationResponse *ns1__removeLcuOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__editLcuOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__editLcuOperation *ns1__editLcuOperation, _ns1__editLcuOperationResponse *ns1__editLcuOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__addLineOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__addLineOperation *ns1__addLineOperation, _ns1__addLineOperationResponse *ns1__addLineOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__removeLineOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__removeLineOperation *ns1__removeLineOperation, _ns1__removeLineOperationResponse *ns1__removeLineOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__editLineOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__editLineOperation *ns1__editLineOperation, _ns1__editLineOperationResponse *ns1__editLineOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__addProgramOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__addProgramOperation *ns1__addProgramOperation, _ns1__addProgramOperationResponse *ns1__addProgramOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__removeProgramOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__removeProgramOperation *ns1__removeProgramOperation, _ns1__removeProgramOperationResponse *ns1__removeProgramOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__controlLcuOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__controlLcuOperation *ns1__controlLcuOperation, _ns1__controlLcuOperationResponse *ns1__controlLcuOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__controlLineOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__controlLineOperation *ns1__controlLineOperation, _ns1__controlLineOperationResponse *ns1__controlLineOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__setProgramDcuOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__setProgramDcuOperation *ns1__setProgramDcuOperation, _ns1__setProgramDcuOperationResponse *ns1__setProgramDcuOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getEventLogOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__getEventLogOperation *ns1__getEventLogOperation, _ns1__getEventLogOperationResponse *ns1__getEventLogOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__updateReadEventLogOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__updateReadEventLogOperation *ns1__updateReadEventLogOperation, _ns1__updateReadEventLogOperationResponse *ns1__updateReadEventLogOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__deleteEventLogOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__deleteEventLogOperation *ns1__deleteEventLogOperation, _ns1__deleteEventLogOperationResponse *ns1__deleteEventLogOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getUserLogOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__getUserLogOperation *ns1__getUserLogOperation, _ns1__getUserLogOperationResponse *ns1__getUserLogOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__deleteUserLogOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__deleteUserLogOperation *ns1__deleteUserLogOperation, _ns1__deleteUserLogOperationResponse *ns1__deleteUserLogOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getAllZoneOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__getAllZoneOperation *ns1__getAllZoneOperation, _ns1__getAllZoneOperationResponse *ns1__getAllZoneOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getAllZoneForUserOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__getAllZoneForUserOperation *ns1__getAllZoneForUserOperation, _ns1__getAllZoneForUserOperationResponse *ns1__getAllZoneForUserOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SetDcuToZoneOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SetDcuToZoneOperation *ns1__SetDcuToZoneOperation, _ns1__SetDcuToZoneOperationResponse *ns1__SetDcuToZoneOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__addZoneOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__addZoneOperation *ns1__addZoneOperation, _ns1__addZoneOperationResponse *ns1__addZoneOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__editZoneOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__editZoneOperation *ns1__editZoneOperation, _ns1__editZoneOperationResponse *ns1__editZoneOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__removeZoneOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__removeZoneOperation *ns1__removeZoneOperation, _ns1__removeZoneOperationResponse *ns1__removeZoneOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getAllUserOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__getAllUserOperation *ns1__getAllUserOperation, _ns1__getAllUserOperationResponse *ns1__getAllUserOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__addUserOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__addUserOperation *ns1__addUserOperation, _ns1__addUserOperationResponse *ns1__addUserOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__editUserOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__editUserOperation *ns1__editUserOperation, _ns1__editUserOperationResponse *ns1__editUserOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__removeUserOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__removeUserOperation *ns1__removeUserOperation, _ns1__removeUserOperationResponse *ns1__removeUserOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__editUserByUserOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__editUserByUserOperation *ns1__editUserByUserOperation, _ns1__editUserByUserOperationResponse *ns1__editUserByUserOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getProgramOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__getProgramOperation *ns1__getProgramOperation, _ns1__getProgramOperationResponse *ns1__getProgramOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__editProgramOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__editProgramOperation *ns1__editProgramOperation, _ns1__editProgramOperationResponse *ns1__editProgramOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getDayScheduleOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__getDayScheduleOperation *ns1__getDayScheduleOperation, _ns1__getDayScheduleOperationResponse *ns1__getDayScheduleOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__editDayScheduleOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__editDayScheduleOperation *ns1__editDayScheduleOperation, _ns1__editDayScheduleOperationResponse *ns1__editDayScheduleOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__removeDayScheduleOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__removeDayScheduleOperation *ns1__removeDayScheduleOperation, _ns1__removeDayScheduleOperationResponse *ns1__removeDayScheduleOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__addDayScheduleOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__addDayScheduleOperation *ns1__addDayScheduleOperation, _ns1__addDayScheduleOperationResponse *ns1__addDayScheduleOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getListScheduleOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__getListScheduleOperation *ns1__getListScheduleOperation, _ns1__getListScheduleOperationResponse *ns1__getListScheduleOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__addListScheduleOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__addListScheduleOperation *ns1__addListScheduleOperation, _ns1__addListScheduleOperationResponse *ns1__addListScheduleOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__editListScheduleOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__editListScheduleOperation *ns1__editListScheduleOperation, _ns1__editListScheduleOperationResponse *ns1__editListScheduleOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__removeListScheduleOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__removeListScheduleOperation *ns1__removeListScheduleOperation, _ns1__removeListScheduleOperationResponse *ns1__removeListScheduleOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getScheduleOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__getScheduleOperation *ns1__getScheduleOperation, _ns1__getScheduleOperationResponse *ns1__getScheduleOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__addScheduleOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__addScheduleOperation *ns1__addScheduleOperation, _ns1__addScheduleOperationResponse *ns1__addScheduleOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__editScheduleOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__editScheduleOperation *ns1__editScheduleOperation, _ns1__editScheduleOperationResponse *ns1__editScheduleOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__removeScheduleOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__removeScheduleOperation *ns1__removeScheduleOperation, _ns1__removeScheduleOperationResponse *ns1__removeScheduleOperationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getLcuLogOperation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__getLcuLogOperation *ns1__getLcuLogOperation, _ns1__getLcuLogOperationResponse *ns1__getLcuLogOperationResponse);

#endif

/* End of soapStub.h */
